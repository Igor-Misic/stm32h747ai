ARM GAS  /tmp/ccCKUkgF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h7xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_NVIC_SetPriorityGrouping
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_NVIC_SetPriorityGrouping:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c"
   1:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
   2:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
   3:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @file    stm32h7xx_hal_cortex.c
   4:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  11:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @verbatim
  12:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  13:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  15:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  16:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  17:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ===========================================================
  19:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  20:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     The Cortex-M exceptions are managed by CMSIS functions.
  22:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  23:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         function according to the following table.
  25:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  26:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority.
  28:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  29:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible.
ARM GAS  /tmp/ccCKUkgF.s 			page 2


  30:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  32:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  37:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  38:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ========================================================
  40:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  41:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  43:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        is a CMSIS function that:
  45:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  52:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() macro is defined
  55:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        inside the stm32h7xx_hal_cortex.h file.
  56:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  57:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  61:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  63:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  67:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @endverbatim
  68:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  69:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @attention
  70:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  71:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  72:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * All rights reserved.
  73:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  74:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * the root directory of this software component.
  76:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  78:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  79:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  80:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  81:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  82:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #include "stm32h7xx_hal.h"
  83:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  84:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  85:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  86:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
ARM GAS  /tmp/ccCKUkgF.s 			page 3


  87:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  88:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  89:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  90:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  91:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  92:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  93:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  94:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  95:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  96:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  97:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  98:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  99:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 100:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 101:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 102:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 103:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 104:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 105:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 106:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 107:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 108:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 109:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 110:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 111:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 112:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 113:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 114:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 115:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 116:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       Systick functionalities
 117:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 118:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 119:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 120:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 121:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 122:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 123:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 124:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 125:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         using the required unlock sequence.
 126:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length.
 127:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 128:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 129:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 130:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 131:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 132:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 133:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 134:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 135:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 136:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 137:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 138:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
 139:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 140:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 141:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 142:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 143:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
ARM GAS  /tmp/ccCKUkgF.s 			page 4


  30              		.loc 1 143 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 144:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 145:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  35              		.loc 1 145 3 view .LVU1
 146:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 147:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 148:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  36              		.loc 1 148 3 view .LVU2
  37              	.LBB52:
  38              	.LBI52:
  39              		.file 2 "../../Drivers/CMSIS/Include/core_cm4.h"
   1:../../Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../../Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../../Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:../../Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:../../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/core_cm4.h **** /*
   8:../../Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../../Drivers/CMSIS/Include/core_cm4.h ****  *
  10:../../Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../Drivers/CMSIS/Include/core_cm4.h ****  *
  12:../../Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../../Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:../../Drivers/CMSIS/Include/core_cm4.h ****  *
  16:../../Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../Drivers/CMSIS/Include/core_cm4.h ****  *
  18:../../Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../../Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:../../Drivers/CMSIS/Include/core_cm4.h ****  */
  24:../../Drivers/CMSIS/Include/core_cm4.h **** 
  25:../../Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../../Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:../../Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:../../Drivers/CMSIS/Include/core_cm4.h **** 
  31:../../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../../Drivers/CMSIS/Include/core_cm4.h **** 
  34:../../Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:../../Drivers/CMSIS/Include/core_cm4.h **** 
  36:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:../../Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:../../Drivers/CMSIS/Include/core_cm4.h **** 
  40:../../Drivers/CMSIS/Include/core_cm4.h **** /**
  41:../../Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../../Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
ARM GAS  /tmp/ccCKUkgF.s 			page 5


  43:../../Drivers/CMSIS/Include/core_cm4.h **** 
  44:../../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../../Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../../Drivers/CMSIS/Include/core_cm4.h **** 
  47:../../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../../Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../../Drivers/CMSIS/Include/core_cm4.h **** 
  50:../../Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../../Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../../Drivers/CMSIS/Include/core_cm4.h ****  */
  53:../../Drivers/CMSIS/Include/core_cm4.h **** 
  54:../../Drivers/CMSIS/Include/core_cm4.h **** 
  55:../../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:../../Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:../../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:../../Drivers/CMSIS/Include/core_cm4.h **** /**
  59:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:../../Drivers/CMSIS/Include/core_cm4.h ****  */
  62:../../Drivers/CMSIS/Include/core_cm4.h **** 
  63:../../Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:../../Drivers/CMSIS/Include/core_cm4.h **** 
  65:../../Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../../Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../../Drivers/CMSIS/Include/core_cm4.h **** 
  71:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../../Drivers/CMSIS/Include/core_cm4.h **** 
  73:../../Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../../Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../../Drivers/CMSIS/Include/core_cm4.h **** */
  76:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:../../Drivers/CMSIS/Include/core_cm4.h **** 
  88:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:../../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 6


 100:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:../../Drivers/CMSIS/Include/core_cm4.h **** 
 112:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:../../Drivers/CMSIS/Include/core_cm4.h **** 
 124:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:../../Drivers/CMSIS/Include/core_cm4.h **** 
 136:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:../../Drivers/CMSIS/Include/core_cm4.h **** 
 148:../../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../../Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../../Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:../../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:../../Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccCKUkgF.s 			page 7


 157:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:../../Drivers/CMSIS/Include/core_cm4.h **** 
 160:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:../../Drivers/CMSIS/Include/core_cm4.h **** 
 162:../../Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../../Drivers/CMSIS/Include/core_cm4.h **** 
 164:../../Drivers/CMSIS/Include/core_cm4.h **** 
 165:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:../../Drivers/CMSIS/Include/core_cm4.h **** }
 167:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:../../Drivers/CMSIS/Include/core_cm4.h **** 
 169:../../Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../../Drivers/CMSIS/Include/core_cm4.h **** 
 171:../../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../../Drivers/CMSIS/Include/core_cm4.h **** 
 173:../../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../../Drivers/CMSIS/Include/core_cm4.h **** 
 176:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:../../Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:../../Drivers/CMSIS/Include/core_cm4.h **** 
 180:../../Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:../../Drivers/CMSIS/Include/core_cm4.h **** 
 187:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:../../Drivers/CMSIS/Include/core_cm4.h **** 
 192:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:../../Drivers/CMSIS/Include/core_cm4.h **** 
 197:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:../../Drivers/CMSIS/Include/core_cm4.h **** 
 202:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../../Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:../../Drivers/CMSIS/Include/core_cm4.h **** 
 208:../../Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 210:../../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../../Drivers/CMSIS/Include/core_cm4.h **** 
 212:../../Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../../Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
ARM GAS  /tmp/ccCKUkgF.s 			page 8


 214:../../Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../../Drivers/CMSIS/Include/core_cm4.h **** */
 216:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../../Drivers/CMSIS/Include/core_cm4.h **** #else
 219:../../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:../../Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../../Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../../Drivers/CMSIS/Include/core_cm4.h **** 
 224:../../Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:../../Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../../Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../../Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../../Drivers/CMSIS/Include/core_cm4.h **** 
 229:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../../Drivers/CMSIS/Include/core_cm4.h **** 
 231:../../Drivers/CMSIS/Include/core_cm4.h **** 
 232:../../Drivers/CMSIS/Include/core_cm4.h **** 
 233:../../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:../../Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:../../Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:../../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 245:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../../Drivers/CMSIS/Include/core_cm4.h **** */
 248:../../Drivers/CMSIS/Include/core_cm4.h **** 
 249:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 250:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 255:../../Drivers/CMSIS/Include/core_cm4.h **** 
 256:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 257:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 259:../../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:../../Drivers/CMSIS/Include/core_cm4.h **** {
 261:../../Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 263:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
ARM GAS  /tmp/ccCKUkgF.s 			page 9


 271:../../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../../Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:../../Drivers/CMSIS/Include/core_cm4.h **** 
 275:../../Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../../Drivers/CMSIS/Include/core_cm4.h **** 
 279:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../../Drivers/CMSIS/Include/core_cm4.h **** 
 282:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../../Drivers/CMSIS/Include/core_cm4.h **** 
 285:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../../Drivers/CMSIS/Include/core_cm4.h **** 
 288:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../../Drivers/CMSIS/Include/core_cm4.h **** 
 291:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../../Drivers/CMSIS/Include/core_cm4.h **** 
 294:../../Drivers/CMSIS/Include/core_cm4.h **** 
 295:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 296:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 298:../../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:../../Drivers/CMSIS/Include/core_cm4.h **** {
 300:../../Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 302:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../../Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:../../Drivers/CMSIS/Include/core_cm4.h **** 
 308:../../Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:../../Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../../Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../../Drivers/CMSIS/Include/core_cm4.h **** 
 312:../../Drivers/CMSIS/Include/core_cm4.h **** 
 313:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 314:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 316:../../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:../../Drivers/CMSIS/Include/core_cm4.h **** {
 318:../../Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 320:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
ARM GAS  /tmp/ccCKUkgF.s 			page 10


 328:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../../Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:../../Drivers/CMSIS/Include/core_cm4.h **** 
 336:../../Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../../Drivers/CMSIS/Include/core_cm4.h **** 
 340:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../../Drivers/CMSIS/Include/core_cm4.h **** 
 343:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../../Drivers/CMSIS/Include/core_cm4.h **** 
 346:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../../Drivers/CMSIS/Include/core_cm4.h **** 
 349:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../../Drivers/CMSIS/Include/core_cm4.h **** 
 352:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../../Drivers/CMSIS/Include/core_cm4.h **** 
 355:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../../Drivers/CMSIS/Include/core_cm4.h **** 
 358:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../../Drivers/CMSIS/Include/core_cm4.h **** 
 361:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../../Drivers/CMSIS/Include/core_cm4.h **** 
 364:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../../Drivers/CMSIS/Include/core_cm4.h **** 
 367:../../Drivers/CMSIS/Include/core_cm4.h **** 
 368:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 369:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 371:../../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:../../Drivers/CMSIS/Include/core_cm4.h **** {
 373:../../Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 375:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../../Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:../../Drivers/CMSIS/Include/core_cm4.h **** 
 383:../../Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
ARM GAS  /tmp/ccCKUkgF.s 			page 11


 385:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../../Drivers/CMSIS/Include/core_cm4.h **** 
 387:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../../Drivers/CMSIS/Include/core_cm4.h **** 
 390:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../../Drivers/CMSIS/Include/core_cm4.h **** 
 393:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../../Drivers/CMSIS/Include/core_cm4.h **** 
 395:../../Drivers/CMSIS/Include/core_cm4.h **** 
 396:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 397:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 402:../../Drivers/CMSIS/Include/core_cm4.h **** 
 403:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 404:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 406:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:../../Drivers/CMSIS/Include/core_cm4.h **** {
 408:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../../Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:../../Drivers/CMSIS/Include/core_cm4.h **** 
 423:../../Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../../Drivers/CMSIS/Include/core_cm4.h **** 
 427:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../../Drivers/CMSIS/Include/core_cm4.h **** 
 429:../../Drivers/CMSIS/Include/core_cm4.h **** 
 430:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 431:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 436:../../Drivers/CMSIS/Include/core_cm4.h **** 
 437:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 438:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 440:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:../../Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccCKUkgF.s 			page 12


 442:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../../Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:../../Drivers/CMSIS/Include/core_cm4.h **** 
 465:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../../Drivers/CMSIS/Include/core_cm4.h **** 
 469:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../../Drivers/CMSIS/Include/core_cm4.h **** 
 472:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../../Drivers/CMSIS/Include/core_cm4.h **** 
 475:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../../Drivers/CMSIS/Include/core_cm4.h **** 
 478:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../../Drivers/CMSIS/Include/core_cm4.h **** 
 481:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../../Drivers/CMSIS/Include/core_cm4.h **** 
 485:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../../Drivers/CMSIS/Include/core_cm4.h **** 
 488:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../../Drivers/CMSIS/Include/core_cm4.h **** 
 491:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../../Drivers/CMSIS/Include/core_cm4.h **** 
 494:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../../Drivers/CMSIS/Include/core_cm4.h **** 
 497:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
ARM GAS  /tmp/ccCKUkgF.s 			page 13


 499:../../Drivers/CMSIS/Include/core_cm4.h **** 
 500:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../../Drivers/CMSIS/Include/core_cm4.h **** 
 503:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../../Drivers/CMSIS/Include/core_cm4.h **** 
 506:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../../Drivers/CMSIS/Include/core_cm4.h **** 
 509:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../../Drivers/CMSIS/Include/core_cm4.h **** 
 512:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../../Drivers/CMSIS/Include/core_cm4.h **** 
 516:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../../Drivers/CMSIS/Include/core_cm4.h **** 
 520:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../../Drivers/CMSIS/Include/core_cm4.h **** 
 523:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../../Drivers/CMSIS/Include/core_cm4.h **** 
 526:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../../Drivers/CMSIS/Include/core_cm4.h **** 
 529:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../../Drivers/CMSIS/Include/core_cm4.h **** 
 532:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../../Drivers/CMSIS/Include/core_cm4.h **** 
 535:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../../Drivers/CMSIS/Include/core_cm4.h **** 
 538:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../../Drivers/CMSIS/Include/core_cm4.h **** 
 542:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../../Drivers/CMSIS/Include/core_cm4.h **** 
 545:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../../Drivers/CMSIS/Include/core_cm4.h **** 
 548:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../../Drivers/CMSIS/Include/core_cm4.h **** 
 552:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../../Drivers/CMSIS/Include/core_cm4.h **** 
 555:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
ARM GAS  /tmp/ccCKUkgF.s 			page 14


 556:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../../Drivers/CMSIS/Include/core_cm4.h **** 
 558:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../../Drivers/CMSIS/Include/core_cm4.h **** 
 561:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../../Drivers/CMSIS/Include/core_cm4.h **** 
 564:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../../Drivers/CMSIS/Include/core_cm4.h **** 
 567:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../../Drivers/CMSIS/Include/core_cm4.h **** 
 571:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../../Drivers/CMSIS/Include/core_cm4.h **** 
 574:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../../Drivers/CMSIS/Include/core_cm4.h **** 
 577:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../../Drivers/CMSIS/Include/core_cm4.h **** 
 580:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../../Drivers/CMSIS/Include/core_cm4.h **** 
 583:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../../Drivers/CMSIS/Include/core_cm4.h **** 
 586:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../../Drivers/CMSIS/Include/core_cm4.h **** 
 589:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../../Drivers/CMSIS/Include/core_cm4.h **** 
 592:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../../Drivers/CMSIS/Include/core_cm4.h **** 
 595:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../../Drivers/CMSIS/Include/core_cm4.h **** 
 598:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../../Drivers/CMSIS/Include/core_cm4.h **** 
 601:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../../Drivers/CMSIS/Include/core_cm4.h **** 
 604:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../../Drivers/CMSIS/Include/core_cm4.h **** 
 607:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../../Drivers/CMSIS/Include/core_cm4.h **** 
 610:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
ARM GAS  /tmp/ccCKUkgF.s 			page 15


 613:../../Drivers/CMSIS/Include/core_cm4.h **** 
 614:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../../Drivers/CMSIS/Include/core_cm4.h **** 
 617:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../../Drivers/CMSIS/Include/core_cm4.h **** 
 620:../../Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../../Drivers/CMSIS/Include/core_cm4.h **** 
 624:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../../Drivers/CMSIS/Include/core_cm4.h **** 
 627:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../../Drivers/CMSIS/Include/core_cm4.h **** 
 630:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../../Drivers/CMSIS/Include/core_cm4.h **** 
 633:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../../Drivers/CMSIS/Include/core_cm4.h **** 
 636:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../../Drivers/CMSIS/Include/core_cm4.h **** 
 639:../../Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../../Drivers/CMSIS/Include/core_cm4.h **** 
 643:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../../Drivers/CMSIS/Include/core_cm4.h **** 
 646:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../../Drivers/CMSIS/Include/core_cm4.h **** 
 649:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../../Drivers/CMSIS/Include/core_cm4.h **** 
 652:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../../Drivers/CMSIS/Include/core_cm4.h **** 
 655:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../../Drivers/CMSIS/Include/core_cm4.h **** 
 658:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../../Drivers/CMSIS/Include/core_cm4.h **** 
 661:../../Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../../Drivers/CMSIS/Include/core_cm4.h **** 
 665:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../../Drivers/CMSIS/Include/core_cm4.h **** 
 668:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
ARM GAS  /tmp/ccCKUkgF.s 			page 16


 670:../../Drivers/CMSIS/Include/core_cm4.h **** 
 671:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../../Drivers/CMSIS/Include/core_cm4.h **** 
 674:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../../Drivers/CMSIS/Include/core_cm4.h **** 
 677:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../../Drivers/CMSIS/Include/core_cm4.h **** 
 680:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../../Drivers/CMSIS/Include/core_cm4.h **** 
 684:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../../Drivers/CMSIS/Include/core_cm4.h **** 
 687:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../../Drivers/CMSIS/Include/core_cm4.h **** 
 690:../../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../../Drivers/CMSIS/Include/core_cm4.h **** 
 694:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../../Drivers/CMSIS/Include/core_cm4.h **** 
 697:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../../Drivers/CMSIS/Include/core_cm4.h **** 
 700:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../../Drivers/CMSIS/Include/core_cm4.h **** 
 703:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../../Drivers/CMSIS/Include/core_cm4.h **** 
 706:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../../Drivers/CMSIS/Include/core_cm4.h **** 
 708:../../Drivers/CMSIS/Include/core_cm4.h **** 
 709:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 710:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 715:../../Drivers/CMSIS/Include/core_cm4.h **** 
 716:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 717:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 719:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:../../Drivers/CMSIS/Include/core_cm4.h **** {
 721:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../../Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:../../Drivers/CMSIS/Include/core_cm4.h **** 
 726:../../Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
ARM GAS  /tmp/ccCKUkgF.s 			page 17


 727:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../../Drivers/CMSIS/Include/core_cm4.h **** 
 730:../../Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../../Drivers/CMSIS/Include/core_cm4.h **** 
 734:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../../Drivers/CMSIS/Include/core_cm4.h **** 
 737:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../../Drivers/CMSIS/Include/core_cm4.h **** 
 740:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../../Drivers/CMSIS/Include/core_cm4.h **** 
 743:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../../Drivers/CMSIS/Include/core_cm4.h **** 
 746:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../../Drivers/CMSIS/Include/core_cm4.h **** 
 748:../../Drivers/CMSIS/Include/core_cm4.h **** 
 749:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 750:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 755:../../Drivers/CMSIS/Include/core_cm4.h **** 
 756:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 757:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 759:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:../../Drivers/CMSIS/Include/core_cm4.h **** {
 761:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../../Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:../../Drivers/CMSIS/Include/core_cm4.h **** 
 767:../../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../../Drivers/CMSIS/Include/core_cm4.h **** 
 771:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../../Drivers/CMSIS/Include/core_cm4.h **** 
 774:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../../Drivers/CMSIS/Include/core_cm4.h **** 
 777:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../../Drivers/CMSIS/Include/core_cm4.h **** 
 780:../../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 18


 784:../../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../../Drivers/CMSIS/Include/core_cm4.h **** 
 788:../../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../../Drivers/CMSIS/Include/core_cm4.h **** 
 792:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../../Drivers/CMSIS/Include/core_cm4.h **** 
 795:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../../Drivers/CMSIS/Include/core_cm4.h **** 
 798:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../../Drivers/CMSIS/Include/core_cm4.h **** 
 800:../../Drivers/CMSIS/Include/core_cm4.h **** 
 801:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 802:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 807:../../Drivers/CMSIS/Include/core_cm4.h **** 
 808:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 809:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 811:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:../../Drivers/CMSIS/Include/core_cm4.h **** {
 813:../../Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 815:../../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../../Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccCKUkgF.s 			page 19


 841:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../../Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:../../Drivers/CMSIS/Include/core_cm4.h **** 
 844:../../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../../Drivers/CMSIS/Include/core_cm4.h **** 
 848:../../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../../Drivers/CMSIS/Include/core_cm4.h **** 
 852:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../../Drivers/CMSIS/Include/core_cm4.h **** 
 855:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../../Drivers/CMSIS/Include/core_cm4.h **** 
 858:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../../Drivers/CMSIS/Include/core_cm4.h **** 
 861:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../../Drivers/CMSIS/Include/core_cm4.h **** 
 864:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../../Drivers/CMSIS/Include/core_cm4.h **** 
 867:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../../Drivers/CMSIS/Include/core_cm4.h **** 
 870:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../../Drivers/CMSIS/Include/core_cm4.h **** 
 873:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../../Drivers/CMSIS/Include/core_cm4.h **** 
 876:../../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../../Drivers/CMSIS/Include/core_cm4.h **** 
 880:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../../Drivers/CMSIS/Include/core_cm4.h **** 
 883:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../../Drivers/CMSIS/Include/core_cm4.h **** 
 886:../../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../../Drivers/CMSIS/Include/core_cm4.h **** 
 888:../../Drivers/CMSIS/Include/core_cm4.h **** 
 889:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 890:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 895:../../Drivers/CMSIS/Include/core_cm4.h **** 
 896:../../Drivers/CMSIS/Include/core_cm4.h **** /**
 897:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
ARM GAS  /tmp/ccCKUkgF.s 			page 20


 898:../../Drivers/CMSIS/Include/core_cm4.h ****  */
 899:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:../../Drivers/CMSIS/Include/core_cm4.h **** {
 901:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../../Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:../../Drivers/CMSIS/Include/core_cm4.h **** 
 926:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../../Drivers/CMSIS/Include/core_cm4.h **** 
 930:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../../Drivers/CMSIS/Include/core_cm4.h **** 
 933:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../../Drivers/CMSIS/Include/core_cm4.h **** 
 936:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../../Drivers/CMSIS/Include/core_cm4.h **** 
 939:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../../Drivers/CMSIS/Include/core_cm4.h **** 
 942:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../../Drivers/CMSIS/Include/core_cm4.h **** 
 945:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../../Drivers/CMSIS/Include/core_cm4.h **** 
 948:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../../Drivers/CMSIS/Include/core_cm4.h **** 
 951:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../../Drivers/CMSIS/Include/core_cm4.h **** 
 954:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
ARM GAS  /tmp/ccCKUkgF.s 			page 21


 955:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../../Drivers/CMSIS/Include/core_cm4.h **** 
 957:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../../Drivers/CMSIS/Include/core_cm4.h **** 
 960:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../../Drivers/CMSIS/Include/core_cm4.h **** 
 963:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../../Drivers/CMSIS/Include/core_cm4.h **** 
 966:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../../Drivers/CMSIS/Include/core_cm4.h **** 
 969:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../../Drivers/CMSIS/Include/core_cm4.h **** 
 972:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../../Drivers/CMSIS/Include/core_cm4.h **** 
 975:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../../Drivers/CMSIS/Include/core_cm4.h **** 
 978:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../../Drivers/CMSIS/Include/core_cm4.h **** 
 981:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../../Drivers/CMSIS/Include/core_cm4.h **** 
 985:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../../Drivers/CMSIS/Include/core_cm4.h **** 
 989:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../../Drivers/CMSIS/Include/core_cm4.h **** 
 993:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../../Drivers/CMSIS/Include/core_cm4.h **** 
 997:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../../Drivers/CMSIS/Include/core_cm4.h **** 
1001:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../../Drivers/CMSIS/Include/core_cm4.h **** 
1005:../../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../../Drivers/CMSIS/Include/core_cm4.h **** 
1009:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 22


1012:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../../Drivers/CMSIS/Include/core_cm4.h **** 
1015:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../../Drivers/CMSIS/Include/core_cm4.h **** 
1018:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../../Drivers/CMSIS/Include/core_cm4.h **** 
1021:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../../Drivers/CMSIS/Include/core_cm4.h **** 
1024:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../../Drivers/CMSIS/Include/core_cm4.h **** 
1027:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../../Drivers/CMSIS/Include/core_cm4.h **** 
1030:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../../Drivers/CMSIS/Include/core_cm4.h **** 
1033:../../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../../Drivers/CMSIS/Include/core_cm4.h **** 
1035:../../Drivers/CMSIS/Include/core_cm4.h **** 
1036:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1037:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1042:../../Drivers/CMSIS/Include/core_cm4.h **** 
1043:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1044:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1046:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:../../Drivers/CMSIS/Include/core_cm4.h **** {
1048:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
ARM GAS  /tmp/ccCKUkgF.s 			page 23


1069:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../../Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:../../Drivers/CMSIS/Include/core_cm4.h **** 
1074:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../../Drivers/CMSIS/Include/core_cm4.h **** 
1078:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../../Drivers/CMSIS/Include/core_cm4.h **** 
1082:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../../Drivers/CMSIS/Include/core_cm4.h **** 
1086:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../../Drivers/CMSIS/Include/core_cm4.h **** 
1089:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../../Drivers/CMSIS/Include/core_cm4.h **** 
1092:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../../Drivers/CMSIS/Include/core_cm4.h **** 
1095:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../../Drivers/CMSIS/Include/core_cm4.h **** 
1099:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../../Drivers/CMSIS/Include/core_cm4.h **** 
1102:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../../Drivers/CMSIS/Include/core_cm4.h **** 
1106:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../../Drivers/CMSIS/Include/core_cm4.h **** 
1110:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../../Drivers/CMSIS/Include/core_cm4.h **** 
1113:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../../Drivers/CMSIS/Include/core_cm4.h **** 
1116:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../../Drivers/CMSIS/Include/core_cm4.h **** 
1119:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../../Drivers/CMSIS/Include/core_cm4.h **** 
1122:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../../Drivers/CMSIS/Include/core_cm4.h **** 
1125:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
ARM GAS  /tmp/ccCKUkgF.s 			page 24


1126:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../../Drivers/CMSIS/Include/core_cm4.h **** 
1128:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../../Drivers/CMSIS/Include/core_cm4.h **** 
1132:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../../Drivers/CMSIS/Include/core_cm4.h **** 
1135:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../../Drivers/CMSIS/Include/core_cm4.h **** 
1139:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../../Drivers/CMSIS/Include/core_cm4.h **** 
1142:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../../Drivers/CMSIS/Include/core_cm4.h **** 
1145:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../../Drivers/CMSIS/Include/core_cm4.h **** 
1148:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../../Drivers/CMSIS/Include/core_cm4.h **** 
1151:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../../Drivers/CMSIS/Include/core_cm4.h **** 
1154:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../../Drivers/CMSIS/Include/core_cm4.h **** 
1157:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../../Drivers/CMSIS/Include/core_cm4.h **** 
1161:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../../Drivers/CMSIS/Include/core_cm4.h **** 
1164:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../../Drivers/CMSIS/Include/core_cm4.h **** 
1168:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../../Drivers/CMSIS/Include/core_cm4.h **** 
1172:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../../Drivers/CMSIS/Include/core_cm4.h **** 
1175:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../../Drivers/CMSIS/Include/core_cm4.h **** 
1178:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../../Drivers/CMSIS/Include/core_cm4.h **** 
1181:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
ARM GAS  /tmp/ccCKUkgF.s 			page 25


1183:../../Drivers/CMSIS/Include/core_cm4.h **** 
1184:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../../Drivers/CMSIS/Include/core_cm4.h **** 
1187:../../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../../Drivers/CMSIS/Include/core_cm4.h **** 
1191:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../../Drivers/CMSIS/Include/core_cm4.h **** 
1194:../../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../../Drivers/CMSIS/Include/core_cm4.h **** 
1196:../../Drivers/CMSIS/Include/core_cm4.h **** 
1197:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1199:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1204:../../Drivers/CMSIS/Include/core_cm4.h **** 
1205:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1206:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1208:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:../../Drivers/CMSIS/Include/core_cm4.h **** {
1210:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../../Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:../../Drivers/CMSIS/Include/core_cm4.h **** 
1223:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../../Drivers/CMSIS/Include/core_cm4.h **** 
1225:../../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../../Drivers/CMSIS/Include/core_cm4.h **** 
1229:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../../Drivers/CMSIS/Include/core_cm4.h **** 
1232:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../../Drivers/CMSIS/Include/core_cm4.h **** 
1235:../../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../../Drivers/CMSIS/Include/core_cm4.h **** 
1239:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
ARM GAS  /tmp/ccCKUkgF.s 			page 26


1240:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../../Drivers/CMSIS/Include/core_cm4.h **** 
1242:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../../Drivers/CMSIS/Include/core_cm4.h **** 
1245:../../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../../Drivers/CMSIS/Include/core_cm4.h **** 
1249:../../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../../Drivers/CMSIS/Include/core_cm4.h **** 
1253:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../../Drivers/CMSIS/Include/core_cm4.h **** 
1256:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../../Drivers/CMSIS/Include/core_cm4.h **** 
1259:../../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../../Drivers/CMSIS/Include/core_cm4.h **** 
1263:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../../Drivers/CMSIS/Include/core_cm4.h **** 
1266:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../../Drivers/CMSIS/Include/core_cm4.h **** 
1269:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../../Drivers/CMSIS/Include/core_cm4.h **** 
1272:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../../Drivers/CMSIS/Include/core_cm4.h **** 
1275:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../../Drivers/CMSIS/Include/core_cm4.h **** 
1278:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../../Drivers/CMSIS/Include/core_cm4.h **** 
1281:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../../Drivers/CMSIS/Include/core_cm4.h **** 
1284:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../../Drivers/CMSIS/Include/core_cm4.h **** 
1287:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../../Drivers/CMSIS/Include/core_cm4.h **** 
1290:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../../Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../../Drivers/CMSIS/Include/core_cm4.h **** 
1293:../../Drivers/CMSIS/Include/core_cm4.h **** 
1294:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1295:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
ARM GAS  /tmp/ccCKUkgF.s 			page 27


1297:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1300:../../Drivers/CMSIS/Include/core_cm4.h **** 
1301:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1302:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1304:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:../../Drivers/CMSIS/Include/core_cm4.h **** {
1306:../../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../../Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:../../Drivers/CMSIS/Include/core_cm4.h **** 
1315:../../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../../Drivers/CMSIS/Include/core_cm4.h **** 
1319:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../../Drivers/CMSIS/Include/core_cm4.h **** 
1322:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../../Drivers/CMSIS/Include/core_cm4.h **** 
1325:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../../Drivers/CMSIS/Include/core_cm4.h **** 
1328:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../../Drivers/CMSIS/Include/core_cm4.h **** 
1331:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:../../Drivers/CMSIS/Include/core_cm4.h **** 
1334:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../../Drivers/CMSIS/Include/core_cm4.h **** 
1337:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../../Drivers/CMSIS/Include/core_cm4.h **** 
1340:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../../Drivers/CMSIS/Include/core_cm4.h **** 
1343:../../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../../Drivers/CMSIS/Include/core_cm4.h **** 
1347:../../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../../Drivers/CMSIS/Include/core_cm4.h **** 
1351:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 28


1354:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../../Drivers/CMSIS/Include/core_cm4.h **** 
1357:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../../Drivers/CMSIS/Include/core_cm4.h **** 
1360:../../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../../Drivers/CMSIS/Include/core_cm4.h **** 
1364:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../../Drivers/CMSIS/Include/core_cm4.h **** 
1367:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../../Drivers/CMSIS/Include/core_cm4.h **** 
1370:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../../Drivers/CMSIS/Include/core_cm4.h **** 
1373:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../../Drivers/CMSIS/Include/core_cm4.h **** 
1376:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../../Drivers/CMSIS/Include/core_cm4.h **** 
1379:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../../Drivers/CMSIS/Include/core_cm4.h **** 
1382:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../../Drivers/CMSIS/Include/core_cm4.h **** 
1385:../../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../../Drivers/CMSIS/Include/core_cm4.h **** 
1389:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../../Drivers/CMSIS/Include/core_cm4.h **** 
1392:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../../Drivers/CMSIS/Include/core_cm4.h **** 
1395:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../../Drivers/CMSIS/Include/core_cm4.h **** 
1398:../../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../../Drivers/CMSIS/Include/core_cm4.h **** 
1400:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../../Drivers/CMSIS/Include/core_cm4.h **** 
1403:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../../Drivers/CMSIS/Include/core_cm4.h **** 
1405:../../Drivers/CMSIS/Include/core_cm4.h **** 
1406:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1407:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccCKUkgF.s 			page 29


1411:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1412:../../Drivers/CMSIS/Include/core_cm4.h **** 
1413:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1414:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1416:../../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:../../Drivers/CMSIS/Include/core_cm4.h **** {
1418:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../../Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:../../Drivers/CMSIS/Include/core_cm4.h **** 
1424:../../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../../Drivers/CMSIS/Include/core_cm4.h **** 
1428:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../../Drivers/CMSIS/Include/core_cm4.h **** 
1431:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../../Drivers/CMSIS/Include/core_cm4.h **** 
1434:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../../Drivers/CMSIS/Include/core_cm4.h **** 
1437:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../../Drivers/CMSIS/Include/core_cm4.h **** 
1440:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../../Drivers/CMSIS/Include/core_cm4.h **** 
1443:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../../Drivers/CMSIS/Include/core_cm4.h **** 
1446:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../../Drivers/CMSIS/Include/core_cm4.h **** 
1449:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../../Drivers/CMSIS/Include/core_cm4.h **** 
1452:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../../Drivers/CMSIS/Include/core_cm4.h **** 
1455:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../../Drivers/CMSIS/Include/core_cm4.h **** 
1458:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../../Drivers/CMSIS/Include/core_cm4.h **** 
1461:../../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../../Drivers/CMSIS/Include/core_cm4.h **** 
1465:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 30


1468:../../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../../Drivers/CMSIS/Include/core_cm4.h **** 
1472:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../../Drivers/CMSIS/Include/core_cm4.h **** 
1475:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../../Drivers/CMSIS/Include/core_cm4.h **** 
1478:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../../Drivers/CMSIS/Include/core_cm4.h **** 
1481:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../../Drivers/CMSIS/Include/core_cm4.h **** 
1484:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../../Drivers/CMSIS/Include/core_cm4.h **** 
1487:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../../Drivers/CMSIS/Include/core_cm4.h **** 
1490:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../../Drivers/CMSIS/Include/core_cm4.h **** 
1493:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../../Drivers/CMSIS/Include/core_cm4.h **** 
1496:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../../Drivers/CMSIS/Include/core_cm4.h **** 
1499:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../../Drivers/CMSIS/Include/core_cm4.h **** 
1502:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:../../Drivers/CMSIS/Include/core_cm4.h **** 
1505:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../../Drivers/CMSIS/Include/core_cm4.h **** 
1508:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../../Drivers/CMSIS/Include/core_cm4.h **** 
1510:../../Drivers/CMSIS/Include/core_cm4.h **** 
1511:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1512:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1517:../../Drivers/CMSIS/Include/core_cm4.h **** 
1518:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1519:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../../Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:../../Drivers/CMSIS/Include/core_cm4.h **** */
1524:../../Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
ARM GAS  /tmp/ccCKUkgF.s 			page 31


1525:../../Drivers/CMSIS/Include/core_cm4.h **** 
1526:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1527:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../../Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../../Drivers/CMSIS/Include/core_cm4.h **** */
1532:../../Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../../Drivers/CMSIS/Include/core_cm4.h **** 
1534:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../../Drivers/CMSIS/Include/core_cm4.h **** 
1536:../../Drivers/CMSIS/Include/core_cm4.h **** 
1537:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1538:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1543:../../Drivers/CMSIS/Include/core_cm4.h **** 
1544:../../Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../../Drivers/CMSIS/Include/core_cm4.h **** 
1554:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../../Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../../Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../../Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../../Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:../../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../../Drivers/CMSIS/Include/core_cm4.h **** 
1563:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:../../Drivers/CMSIS/Include/core_cm4.h **** 
1568:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../../Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../../Drivers/CMSIS/Include/core_cm4.h **** 
1571:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:../../Drivers/CMSIS/Include/core_cm4.h **** 
1573:../../Drivers/CMSIS/Include/core_cm4.h **** 
1574:../../Drivers/CMSIS/Include/core_cm4.h **** 
1575:../../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:../../Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../../Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:../../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
ARM GAS  /tmp/ccCKUkgF.s 			page 32


1582:../../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1584:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../../Drivers/CMSIS/Include/core_cm4.h **** */
1586:../../Drivers/CMSIS/Include/core_cm4.h **** 
1587:../../Drivers/CMSIS/Include/core_cm4.h **** 
1588:../../Drivers/CMSIS/Include/core_cm4.h **** 
1589:../../Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1591:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1596:../../Drivers/CMSIS/Include/core_cm4.h **** 
1597:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../../Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:../../Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../../Drivers/CMSIS/Include/core_cm4.h **** #else
1603:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../../Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../../Drivers/CMSIS/Include/core_cm4.h **** 
1617:../../Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:../../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../../Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../../Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:../../Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../../Drivers/CMSIS/Include/core_cm4.h **** #else
1623:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../../Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../../Drivers/CMSIS/Include/core_cm4.h **** 
1627:../../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../../Drivers/CMSIS/Include/core_cm4.h **** 
1629:../../Drivers/CMSIS/Include/core_cm4.h **** 
1630:../../Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../../Drivers/CMSIS/Include/core_cm4.h **** 
1638:../../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 33


1639:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1640:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../../Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../../Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:../../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1648:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  40              		.loc 2 1648 22 view .LVU3
  41              	.LBB53:
1649:../../Drivers/CMSIS/Include/core_cm4.h **** {
1650:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
  42              		.loc 2 1650 3 view .LVU4
1651:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 2 1651 3 view .LVU5
1652:../../Drivers/CMSIS/Include/core_cm4.h **** 
1653:../../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  44              		.loc 2 1653 3 view .LVU6
  45              		.loc 2 1653 14 is_stmt 0 view .LVU7
  46 0000 0649     		ldr	r1, .L2
  47 0002 CB68     		ldr	r3, [r1, #12]
  48              	.LVL1:
1654:../../Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 2 1654 3 is_stmt 1 view .LVU8
  50              		.loc 2 1654 13 is_stmt 0 view .LVU9
  51 0004 23F4E063 		bic	r3, r3, #1792
  52              	.LVL2:
  53              		.loc 2 1654 13 view .LVU10
  54 0008 1B04     		lsls	r3, r3, #16
  55 000a 1B0C     		lsrs	r3, r3, #16
  56              	.LVL3:
1655:../../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  57              		.loc 2 1655 3 is_stmt 1 view .LVU11
1656:../../Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:../../Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  58              		.loc 2 1657 35 is_stmt 0 view .LVU12
  59 000c 0002     		lsls	r0, r0, #8
  60              	.LVL4:
  61              		.loc 2 1657 35 view .LVU13
  62 000e 00F4E060 		and	r0, r0, #1792
1656:../../Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  63              		.loc 2 1656 62 view .LVU14
  64 0012 0343     		orrs	r3, r3, r0
  65              	.LVL5:
1655:../../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  66              		.loc 2 1655 14 view .LVU15
  67 0014 024A     		ldr	r2, .L2+4
  68 0016 1A43     		orrs	r2, r2, r3
  69              	.LVL6:
1658:../../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  70              		.loc 2 1658 3 is_stmt 1 view .LVU16
  71              		.loc 2 1658 14 is_stmt 0 view .LVU17
  72 0018 CA60     		str	r2, [r1, #12]
  73              	.LVL7:
  74              		.loc 2 1658 14 view .LVU18
ARM GAS  /tmp/ccCKUkgF.s 			page 34


  75              	.LBE53:
  76              	.LBE52:
 149:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
  77              		.loc 1 149 1 view .LVU19
  78 001a 7047     		bx	lr
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 001c 00ED00E0 		.word	-536810240
  83 0020 0000FA05 		.word	100270080
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  88              		.align	1
  89              		.global	HAL_NVIC_SetPriority
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	HAL_NVIC_SetPriority:
  96              	.LVL8:
  97              	.LFB133:
 150:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 151:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 152:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 153:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 154:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 155:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 156:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 157:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 158:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 159:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 160:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 161:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 162:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 163:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 164:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 165:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
  98              		.loc 1 165 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              		.loc 1 165 1 is_stmt 0 view .LVU21
 104 0000 30B4     		push	{r4, r5}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 5, -4
 166:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   uint32_t prioritygroup;
 109              		.loc 1 166 3 is_stmt 1 view .LVU22
 167:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 168:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 169:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 110              		.loc 1 169 3 view .LVU23
 170:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 111              		.loc 1 170 3 view .LVU24
ARM GAS  /tmp/ccCKUkgF.s 			page 35


 171:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 172:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 112              		.loc 1 172 3 view .LVU25
 113              	.LBB54:
 114              	.LBI54:
1659:../../Drivers/CMSIS/Include/core_cm4.h **** }
1660:../../Drivers/CMSIS/Include/core_cm4.h **** 
1661:../../Drivers/CMSIS/Include/core_cm4.h **** 
1662:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1663:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../../Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1667:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 115              		.loc 2 1667 26 view .LVU26
 116              	.LBB55:
1668:../../Drivers/CMSIS/Include/core_cm4.h **** {
1669:../../Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 117              		.loc 2 1669 3 view .LVU27
 118              		.loc 2 1669 26 is_stmt 0 view .LVU28
 119 0002 154B     		ldr	r3, .L10
 120 0004 DB68     		ldr	r3, [r3, #12]
 121              		.loc 2 1669 11 view .LVU29
 122 0006 C3F30223 		ubfx	r3, r3, #8, #3
 123              	.LVL9:
 124              		.loc 2 1669 11 view .LVU30
 125              	.LBE55:
 126              	.LBE54:
 173:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 174:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 127              		.loc 1 174 3 is_stmt 1 view .LVU31
 128              	.LBB56:
 129              	.LBI56:
1670:../../Drivers/CMSIS/Include/core_cm4.h **** }
1671:../../Drivers/CMSIS/Include/core_cm4.h **** 
1672:../../Drivers/CMSIS/Include/core_cm4.h **** 
1673:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1674:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1679:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../../Drivers/CMSIS/Include/core_cm4.h **** {
1681:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1683:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1687:../../Drivers/CMSIS/Include/core_cm4.h **** }
1688:../../Drivers/CMSIS/Include/core_cm4.h **** 
1689:../../Drivers/CMSIS/Include/core_cm4.h **** 
1690:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1691:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/ccCKUkgF.s 			page 36


1694:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1698:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:../../Drivers/CMSIS/Include/core_cm4.h **** {
1700:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1702:../../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1704:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1705:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1706:../../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1708:../../Drivers/CMSIS/Include/core_cm4.h **** }
1709:../../Drivers/CMSIS/Include/core_cm4.h **** 
1710:../../Drivers/CMSIS/Include/core_cm4.h **** 
1711:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1712:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1717:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:../../Drivers/CMSIS/Include/core_cm4.h **** {
1719:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:../../Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1725:../../Drivers/CMSIS/Include/core_cm4.h **** }
1726:../../Drivers/CMSIS/Include/core_cm4.h **** 
1727:../../Drivers/CMSIS/Include/core_cm4.h **** 
1728:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1729:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1736:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:../../Drivers/CMSIS/Include/core_cm4.h **** {
1738:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1740:../../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1742:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1743:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1744:../../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1746:../../Drivers/CMSIS/Include/core_cm4.h **** }
1747:../../Drivers/CMSIS/Include/core_cm4.h **** 
1748:../../Drivers/CMSIS/Include/core_cm4.h **** 
1749:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1750:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
ARM GAS  /tmp/ccCKUkgF.s 			page 37


1751:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1755:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:../../Drivers/CMSIS/Include/core_cm4.h **** {
1757:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1759:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1761:../../Drivers/CMSIS/Include/core_cm4.h **** }
1762:../../Drivers/CMSIS/Include/core_cm4.h **** 
1763:../../Drivers/CMSIS/Include/core_cm4.h **** 
1764:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1765:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1770:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:../../Drivers/CMSIS/Include/core_cm4.h **** {
1772:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1774:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1776:../../Drivers/CMSIS/Include/core_cm4.h **** }
1777:../../Drivers/CMSIS/Include/core_cm4.h **** 
1778:../../Drivers/CMSIS/Include/core_cm4.h **** 
1779:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1780:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1787:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:../../Drivers/CMSIS/Include/core_cm4.h **** {
1789:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1791:../../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1793:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1794:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1795:../../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1797:../../Drivers/CMSIS/Include/core_cm4.h **** }
1798:../../Drivers/CMSIS/Include/core_cm4.h **** 
1799:../../Drivers/CMSIS/Include/core_cm4.h **** 
1800:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1801:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:../../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:../../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
ARM GAS  /tmp/ccCKUkgF.s 			page 38


1808:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1809:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:../../Drivers/CMSIS/Include/core_cm4.h **** {
1811:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1813:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1815:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1816:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1817:../../Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1819:../../Drivers/CMSIS/Include/core_cm4.h **** }
1820:../../Drivers/CMSIS/Include/core_cm4.h **** 
1821:../../Drivers/CMSIS/Include/core_cm4.h **** 
1822:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1823:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:../../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:../../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:../../Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:../../Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1831:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:../../Drivers/CMSIS/Include/core_cm4.h **** {
1833:../../Drivers/CMSIS/Include/core_cm4.h **** 
1834:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1836:../../Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1838:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1839:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1840:../../Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1842:../../Drivers/CMSIS/Include/core_cm4.h **** }
1843:../../Drivers/CMSIS/Include/core_cm4.h **** 
1844:../../Drivers/CMSIS/Include/core_cm4.h **** 
1845:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1846:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:../../Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:../../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:../../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:../../Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1856:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 130              		.loc 2 1856 26 view .LVU32
 131              	.LBB57:
1857:../../Drivers/CMSIS/Include/core_cm4.h **** {
1858:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 132              		.loc 2 1858 3 view .LVU33
1859:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 133              		.loc 2 1859 3 view .LVU34
1860:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
ARM GAS  /tmp/ccCKUkgF.s 			page 39


 134              		.loc 2 1860 3 view .LVU35
1861:../../Drivers/CMSIS/Include/core_cm4.h **** 
1862:../../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 135              		.loc 2 1862 3 view .LVU36
 136              		.loc 2 1862 31 is_stmt 0 view .LVU37
 137 000a C3F10704 		rsb	r4, r3, #7
 138              		.loc 2 1862 23 view .LVU38
 139 000e 042C     		cmp	r4, #4
 140 0010 28BF     		it	cs
 141 0012 0424     		movcs	r4, #4
 142              	.LVL10:
1863:../../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 143              		.loc 2 1863 3 is_stmt 1 view .LVU39
 144              		.loc 2 1863 44 is_stmt 0 view .LVU40
 145 0014 1D1D     		adds	r5, r3, #4
 146              		.loc 2 1863 109 view .LVU41
 147 0016 062D     		cmp	r5, #6
 148 0018 14D9     		bls	.L8
 149 001a 033B     		subs	r3, r3, #3
 150              	.LVL11:
 151              	.L5:
1864:../../Drivers/CMSIS/Include/core_cm4.h **** 
1865:../../Drivers/CMSIS/Include/core_cm4.h ****   return (
 152              		.loc 2 1865 3 is_stmt 1 view .LVU42
1866:../../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 153              		.loc 2 1866 30 is_stmt 0 view .LVU43
 154 001c 4FF0FF35 		mov	r5, #-1
 155              	.LVL12:
 156              		.loc 2 1866 30 view .LVU44
 157 0020 05FA04F4 		lsl	r4, r5, r4
 158              	.LVL13:
 159              		.loc 2 1866 30 view .LVU45
 160 0024 21EA0401 		bic	r1, r1, r4
 161              	.LVL14:
 162              		.loc 2 1866 82 view .LVU46
 163 0028 9940     		lsls	r1, r1, r3
1867:../../Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 164              		.loc 2 1867 30 view .LVU47
 165 002a 05FA03F3 		lsl	r3, r5, r3
 166              	.LVL15:
 167              		.loc 2 1867 30 view .LVU48
 168 002e 22EA0303 		bic	r3, r2, r3
1866:../../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 169              		.loc 2 1866 102 view .LVU49
 170 0032 1943     		orrs	r1, r1, r3
 171              	.LVL16:
1866:../../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 172              		.loc 2 1866 102 view .LVU50
 173              	.LBE57:
 174              	.LBE56:
 175              	.LBB59:
 176              	.LBI59:
1809:../../Drivers/CMSIS/Include/core_cm4.h **** {
 177              		.loc 2 1809 22 is_stmt 1 view .LVU51
 178              	.LBB60:
1811:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 179              		.loc 2 1811 3 view .LVU52
ARM GAS  /tmp/ccCKUkgF.s 			page 40


1811:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 180              		.loc 2 1811 6 is_stmt 0 view .LVU53
 181 0034 0028     		cmp	r0, #0
 182 0036 07DB     		blt	.L6
1813:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 183              		.loc 2 1813 5 is_stmt 1 view .LVU54
1813:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 184              		.loc 2 1813 48 is_stmt 0 view .LVU55
 185 0038 0901     		lsls	r1, r1, #4
 186              	.LVL17:
1813:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 187              		.loc 2 1813 48 view .LVU56
 188 003a C9B2     		uxtb	r1, r1
1813:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 189              		.loc 2 1813 46 view .LVU57
 190 003c 074B     		ldr	r3, .L10+4
 191 003e 1954     		strb	r1, [r3, r0]
 192              	.LVL18:
 193              	.L4:
1813:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 194              		.loc 2 1813 46 view .LVU58
 195              	.LBE60:
 196              	.LBE59:
 175:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 197              		.loc 1 175 1 view .LVU59
 198 0040 30BC     		pop	{r4, r5}
 199              	.LCFI1:
 200              		.cfi_remember_state
 201              		.cfi_restore 5
 202              		.cfi_restore 4
 203              		.cfi_def_cfa_offset 0
 204 0042 7047     		bx	lr
 205              	.LVL19:
 206              	.L8:
 207              	.LCFI2:
 208              		.cfi_restore_state
 209              	.LBB62:
 210              	.LBB58:
1863:../../Drivers/CMSIS/Include/core_cm4.h **** 
 211              		.loc 2 1863 109 view .LVU60
 212 0044 0023     		movs	r3, #0
 213              	.LVL20:
1863:../../Drivers/CMSIS/Include/core_cm4.h **** 
 214              		.loc 2 1863 109 view .LVU61
 215 0046 E9E7     		b	.L5
 216              	.LVL21:
 217              	.L6:
1863:../../Drivers/CMSIS/Include/core_cm4.h **** 
 218              		.loc 2 1863 109 view .LVU62
 219              	.LBE58:
 220              	.LBE62:
 221              	.LBB63:
 222              	.LBB61:
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 223              		.loc 2 1817 5 is_stmt 1 view .LVU63
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 224              		.loc 2 1817 32 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccCKUkgF.s 			page 41


 225 0048 00F00F00 		and	r0, r0, #15
 226              	.LVL22:
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 227              		.loc 2 1817 48 view .LVU65
 228 004c 0901     		lsls	r1, r1, #4
 229              	.LVL23:
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 230              		.loc 2 1817 48 view .LVU66
 231 004e C9B2     		uxtb	r1, r1
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 232              		.loc 2 1817 46 view .LVU67
 233 0050 034B     		ldr	r3, .L10+8
 234 0052 1954     		strb	r1, [r3, r0]
 235              	.LVL24:
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 236              		.loc 2 1817 46 view .LVU68
 237              	.LBE61:
 238              	.LBE63:
 239              		.loc 1 175 1 view .LVU69
 240 0054 F4E7     		b	.L4
 241              	.L11:
 242 0056 00BF     		.align	2
 243              	.L10:
 244 0058 00ED00E0 		.word	-536810240
 245 005c 00E400E0 		.word	-536812544
 246 0060 14ED00E0 		.word	-536810220
 247              		.cfi_endproc
 248              	.LFE133:
 250              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 251              		.align	1
 252              		.global	HAL_NVIC_EnableIRQ
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	HAL_NVIC_EnableIRQ:
 259              	.LVL25:
 260              	.LFB134:
 176:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 177:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 178:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 179:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 180:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         function should be called before.
 181:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 182:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 183:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 184:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 185:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 186:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 187:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 261              		.loc 1 187 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 188:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 189:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
ARM GAS  /tmp/ccCKUkgF.s 			page 42


 266              		.loc 1 189 3 view .LVU71
 190:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 191:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable interrupt */
 192:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 267              		.loc 1 192 3 view .LVU72
 268              	.LBB64:
 269              	.LBI64:
1679:../../Drivers/CMSIS/Include/core_cm4.h **** {
 270              		.loc 2 1679 22 view .LVU73
 271              	.LBB65:
1681:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 272              		.loc 2 1681 3 view .LVU74
1681:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 273              		.loc 2 1681 6 is_stmt 0 view .LVU75
 274 0000 0028     		cmp	r0, #0
 275              	.LVL26:
1681:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 276              		.loc 2 1681 6 view .LVU76
 277 0002 07DB     		blt	.L12
1683:../../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 278              		.loc 2 1683 5 is_stmt 1 view .LVU77
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 279              		.loc 2 1684 5 view .LVU78
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 280              		.loc 2 1684 81 is_stmt 0 view .LVU79
 281 0004 00F01F02 		and	r2, r0, #31
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 282              		.loc 2 1684 34 view .LVU80
 283 0008 4009     		lsrs	r0, r0, #5
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 284              		.loc 2 1684 45 view .LVU81
 285 000a 0123     		movs	r3, #1
 286 000c 9340     		lsls	r3, r3, r2
1684:../../Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 287              		.loc 2 1684 43 view .LVU82
 288 000e 024A     		ldr	r2, .L14
 289 0010 42F82030 		str	r3, [r2, r0, lsl #2]
1685:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 290              		.loc 2 1685 5 is_stmt 1 view .LVU83
 291              	.LVL27:
 292              	.L12:
1685:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 293              		.loc 2 1685 5 is_stmt 0 view .LVU84
 294              	.LBE65:
 295              	.LBE64:
 193:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 296              		.loc 1 193 1 view .LVU85
 297 0014 7047     		bx	lr
 298              	.L15:
 299 0016 00BF     		.align	2
 300              	.L14:
 301 0018 00E100E0 		.word	-536813312
 302              		.cfi_endproc
 303              	.LFE134:
 305              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 306              		.align	1
 307              		.global	HAL_NVIC_DisableIRQ
ARM GAS  /tmp/ccCKUkgF.s 			page 43


 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	HAL_NVIC_DisableIRQ:
 314              	.LVL28:
 315              	.LFB135:
 194:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 195:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 196:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 197:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 198:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 199:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 200:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 201:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 202:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 203:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 316              		.loc 1 203 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 204:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 205:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 321              		.loc 1 205 3 view .LVU87
 206:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 207:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable interrupt */
 208:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 322              		.loc 1 208 3 view .LVU88
 323              	.LBB66:
 324              	.LBI66:
1717:../../Drivers/CMSIS/Include/core_cm4.h **** {
 325              		.loc 2 1717 22 view .LVU89
 326              	.LBB67:
1719:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 327              		.loc 2 1719 3 view .LVU90
1719:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 328              		.loc 2 1719 6 is_stmt 0 view .LVU91
 329 0000 0028     		cmp	r0, #0
 330              	.LVL29:
1719:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 331              		.loc 2 1719 6 view .LVU92
 332 0002 0CDB     		blt	.L16
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 333              		.loc 2 1721 5 is_stmt 1 view .LVU93
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 334              		.loc 2 1721 81 is_stmt 0 view .LVU94
 335 0004 00F01F02 		and	r2, r0, #31
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 336              		.loc 2 1721 34 view .LVU95
 337 0008 4009     		lsrs	r0, r0, #5
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 338              		.loc 2 1721 45 view .LVU96
 339 000a 0123     		movs	r3, #1
 340 000c 9340     		lsls	r3, r3, r2
1721:../../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 341              		.loc 2 1721 43 view .LVU97
ARM GAS  /tmp/ccCKUkgF.s 			page 44


 342 000e 2030     		adds	r0, r0, #32
 343 0010 034A     		ldr	r2, .L18
 344 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1722:../../Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
 345              		.loc 2 1722 5 is_stmt 1 view .LVU98
 346              	.LBB68:
 347              	.LBI68:
 348              		.file 3 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/ccCKUkgF.s 			page 45


  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccCKUkgF.s 			page 46


 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
ARM GAS  /tmp/ccCKUkgF.s 			page 47


 164:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccCKUkgF.s 			page 48


 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccCKUkgF.s 			page 49


 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccCKUkgF.s 			page 50


 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 51


 392:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccCKUkgF.s 			page 52


 449:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccCKUkgF.s 			page 53


 506:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 54


 563:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccCKUkgF.s 			page 55


 620:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
ARM GAS  /tmp/ccCKUkgF.s 			page 56


 677:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccCKUkgF.s 			page 57


 734:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
ARM GAS  /tmp/ccCKUkgF.s 			page 58


 791:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccCKUkgF.s 			page 59


 848:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 60


 905:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 349              		.loc 3 944 27 view .LVU99
 350              	.LBB69:
 945:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 351              		.loc 3 946 3 view .LVU100
 352              		.syntax unified
 353              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 0016 BFF34F8F 		dsb 0xF
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358              	.LBE69:
 359              	.LBE68:
1723:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 360              		.loc 2 1723 5 view .LVU101
 361              	.LBB70:
 362              	.LBI70:
ARM GAS  /tmp/ccCKUkgF.s 			page 61


 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 363              		.loc 3 933 27 view .LVU102
 364              	.LBB71:
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 365              		.loc 3 935 3 view .LVU103
 366              		.syntax unified
 367              	@ 935 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 368 001a BFF36F8F 		isb 0xF
 369              	@ 0 "" 2
 370              	.LVL30:
 371              		.thumb
 372              		.syntax unified
 373              	.L16:
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374              		.loc 3 935 3 is_stmt 0 view .LVU104
 375              	.LBE71:
 376              	.LBE70:
 377              	.LBE67:
 378              	.LBE66:
 209:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 379              		.loc 1 209 1 view .LVU105
 380 001e 7047     		bx	lr
 381              	.L19:
 382              		.align	2
 383              	.L18:
 384 0020 00E100E0 		.word	-536813312
 385              		.cfi_endproc
 386              	.LFE135:
 388              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 389              		.align	1
 390              		.global	HAL_NVIC_SystemReset
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	HAL_NVIC_SystemReset:
 397              	.LFB136:
 210:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 211:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 212:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 213:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 214:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 215:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 216:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 398              		.loc 1 216 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ Volatile: function does not return.
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 217:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* System Reset */
 218:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SystemReset();
 404              		.loc 1 218 3 view .LVU107
 405              	.LBB78:
 406              	.LBI78:
1868:../../Drivers/CMSIS/Include/core_cm4.h ****          );
1869:../../Drivers/CMSIS/Include/core_cm4.h **** }
ARM GAS  /tmp/ccCKUkgF.s 			page 62


1870:../../Drivers/CMSIS/Include/core_cm4.h **** 
1871:../../Drivers/CMSIS/Include/core_cm4.h **** 
1872:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1873:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1874:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:../../Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1876:../../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:../../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1883:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:../../Drivers/CMSIS/Include/core_cm4.h **** {
1885:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1888:../../Drivers/CMSIS/Include/core_cm4.h **** 
1889:../../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:../../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:../../Drivers/CMSIS/Include/core_cm4.h **** 
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:../../Drivers/CMSIS/Include/core_cm4.h **** }
1895:../../Drivers/CMSIS/Include/core_cm4.h **** 
1896:../../Drivers/CMSIS/Include/core_cm4.h **** 
1897:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1898:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1899:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:../../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:../../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1902:../../Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1906:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:../../Drivers/CMSIS/Include/core_cm4.h **** {
1908:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:../../Drivers/CMSIS/Include/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:../../Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:../../Drivers/CMSIS/Include/core_cm4.h **** }
1912:../../Drivers/CMSIS/Include/core_cm4.h **** 
1913:../../Drivers/CMSIS/Include/core_cm4.h **** 
1914:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1915:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1916:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:../../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:../../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1919:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:../../Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1921:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1922:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:../../Drivers/CMSIS/Include/core_cm4.h **** {
1924:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:../../Drivers/CMSIS/Include/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:../../Drivers/CMSIS/Include/core_cm4.h **** }
ARM GAS  /tmp/ccCKUkgF.s 			page 63


1927:../../Drivers/CMSIS/Include/core_cm4.h **** 
1928:../../Drivers/CMSIS/Include/core_cm4.h **** 
1929:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1930:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1931:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1933:../../Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 407              		.loc 2 1933 34 view .LVU108
 408              	.LBB79:
1934:../../Drivers/CMSIS/Include/core_cm4.h **** {
1935:../../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 409              		.loc 2 1935 3 view .LVU109
 410              	.LBB80:
 411              	.LBI80:
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412              		.loc 3 944 27 view .LVU110
 413              	.LBB81:
 414              		.loc 3 946 3 view .LVU111
 415              		.syntax unified
 416              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 417 0000 BFF34F8F 		dsb 0xF
 418              	@ 0 "" 2
 419              		.thumb
 420              		.syntax unified
 421              	.LBE81:
 422              	.LBE80:
1936:../../Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1937:../../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 423              		.loc 2 1937 3 view .LVU112
1938:../../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 424              		.loc 2 1938 32 is_stmt 0 view .LVU113
 425 0004 0549     		ldr	r1, .L22
 426 0006 CA68     		ldr	r2, [r1, #12]
 427              		.loc 2 1938 40 view .LVU114
 428 0008 02F4E062 		and	r2, r2, #1792
1937:../../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 429              		.loc 2 1937 17 view .LVU115
 430 000c 044B     		ldr	r3, .L22+4
 431 000e 1343     		orrs	r3, r3, r2
1937:../../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 432              		.loc 2 1937 15 view .LVU116
 433 0010 CB60     		str	r3, [r1, #12]
1939:../../Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:../../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 434              		.loc 2 1940 3 is_stmt 1 view .LVU117
 435              	.LBB82:
 436              	.LBI82:
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 437              		.loc 3 944 27 view .LVU118
 438              	.LBB83:
 439              		.loc 3 946 3 view .LVU119
 440              		.syntax unified
 441              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 442 0012 BFF34F8F 		dsb 0xF
 443              	@ 0 "" 2
 444              		.thumb
 445              		.syntax unified
ARM GAS  /tmp/ccCKUkgF.s 			page 64


 446              	.L21:
 447              	.LBE83:
 448              	.LBE82:
1941:../../Drivers/CMSIS/Include/core_cm4.h **** 
1942:../../Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 449              		.loc 2 1942 3 view .LVU120
1943:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1944:../../Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
 450              		.loc 2 1944 5 view .LVU121
 451              		.syntax unified
 452              	@ 1944 "../../Drivers/CMSIS/Include/core_cm4.h" 1
 453 0016 00BF     		nop
 454              	@ 0 "" 2
1942:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 455              		.loc 2 1942 8 view .LVU122
 456              		.thumb
 457              		.syntax unified
 458 0018 FDE7     		b	.L21
 459              	.L23:
 460 001a 00BF     		.align	2
 461              	.L22:
 462 001c 00ED00E0 		.word	-536810240
 463 0020 0400FA05 		.word	100270084
 464              	.LBE79:
 465              	.LBE78:
 466              		.cfi_endproc
 467              	.LFE136:
 469              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 470              		.align	1
 471              		.global	HAL_SYSTICK_Config
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	HAL_SYSTICK_Config:
 478              	.LVL31:
 479              	.LFB137:
 219:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 220:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 221:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 222:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 223:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 224:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 225:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status   - 0  Function succeeded.
 226:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  - 1  Function failed.
 227:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 228:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 229:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 480              		.loc 1 229 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 230:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 485              		.loc 1 230 4 view .LVU124
 486              	.LBB84:
 487              	.LBI84:
ARM GAS  /tmp/ccCKUkgF.s 			page 65


1945:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1946:../../Drivers/CMSIS/Include/core_cm4.h **** }
1947:../../Drivers/CMSIS/Include/core_cm4.h **** 
1948:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1949:../../Drivers/CMSIS/Include/core_cm4.h **** 
1950:../../Drivers/CMSIS/Include/core_cm4.h **** 
1951:../../Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1952:../../Drivers/CMSIS/Include/core_cm4.h **** 
1953:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1954:../../Drivers/CMSIS/Include/core_cm4.h **** 
1955:../../Drivers/CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1956:../../Drivers/CMSIS/Include/core_cm4.h **** 
1957:../../Drivers/CMSIS/Include/core_cm4.h **** #endif
1958:../../Drivers/CMSIS/Include/core_cm4.h **** 
1959:../../Drivers/CMSIS/Include/core_cm4.h **** 
1960:../../Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1961:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1962:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1963:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1964:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1965:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
1966:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1967:../../Drivers/CMSIS/Include/core_cm4.h **** 
1968:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1969:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1970:../../Drivers/CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1971:../../Drivers/CMSIS/Include/core_cm4.h ****   \returns
1972:../../Drivers/CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
1973:../../Drivers/CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1974:../../Drivers/CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1975:../../Drivers/CMSIS/Include/core_cm4.h ****  */
1976:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1977:../../Drivers/CMSIS/Include/core_cm4.h **** {
1978:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
1979:../../Drivers/CMSIS/Include/core_cm4.h **** 
1980:../../Drivers/CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1981:../../Drivers/CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1982:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1983:../../Drivers/CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1984:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1985:../../Drivers/CMSIS/Include/core_cm4.h ****   else
1986:../../Drivers/CMSIS/Include/core_cm4.h ****   {
1987:../../Drivers/CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1988:../../Drivers/CMSIS/Include/core_cm4.h ****   }
1989:../../Drivers/CMSIS/Include/core_cm4.h **** }
1990:../../Drivers/CMSIS/Include/core_cm4.h **** 
1991:../../Drivers/CMSIS/Include/core_cm4.h **** 
1992:../../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1993:../../Drivers/CMSIS/Include/core_cm4.h **** 
1994:../../Drivers/CMSIS/Include/core_cm4.h **** 
1995:../../Drivers/CMSIS/Include/core_cm4.h **** 
1996:../../Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1997:../../Drivers/CMSIS/Include/core_cm4.h **** /**
1998:../../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1999:../../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2000:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2001:../../Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccCKUkgF.s 			page 66


2002:../../Drivers/CMSIS/Include/core_cm4.h ****  */
2003:../../Drivers/CMSIS/Include/core_cm4.h **** 
2004:../../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2005:../../Drivers/CMSIS/Include/core_cm4.h **** 
2006:../../Drivers/CMSIS/Include/core_cm4.h **** /**
2007:../../Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2008:../../Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2009:../../Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2010:../../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2011:../../Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2012:../../Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2013:../../Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2014:../../Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2015:../../Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2016:../../Drivers/CMSIS/Include/core_cm4.h ****  */
2017:../../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 488              		.loc 2 2017 26 view .LVU125
 489              	.LBB85:
2018:../../Drivers/CMSIS/Include/core_cm4.h **** {
2019:../../Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 490              		.loc 2 2019 3 view .LVU126
 491              		.loc 2 2019 14 is_stmt 0 view .LVU127
 492 0000 0138     		subs	r0, r0, #1
 493              	.LVL32:
 494              		.loc 2 2019 6 view .LVU128
 495 0002 B0F1807F 		cmp	r0, #16777216
 496 0006 0AD2     		bcs	.L26
2020:../../Drivers/CMSIS/Include/core_cm4.h ****   {
2021:../../Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2022:../../Drivers/CMSIS/Include/core_cm4.h ****   }
2023:../../Drivers/CMSIS/Include/core_cm4.h **** 
2024:../../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 497              		.loc 2 2024 3 is_stmt 1 view .LVU129
 498              		.loc 2 2024 18 is_stmt 0 view .LVU130
 499 0008 064B     		ldr	r3, .L27
 500 000a 5860     		str	r0, [r3, #4]
2025:../../Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 501              		.loc 2 2025 3 is_stmt 1 view .LVU131
 502              	.LVL33:
 503              	.LBB86:
 504              	.LBI86:
1809:../../Drivers/CMSIS/Include/core_cm4.h **** {
 505              		.loc 2 1809 22 view .LVU132
 506              	.LBB87:
1811:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 507              		.loc 2 1811 3 view .LVU133
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 508              		.loc 2 1817 5 view .LVU134
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 509              		.loc 2 1817 46 is_stmt 0 view .LVU135
 510 000c 064A     		ldr	r2, .L27+4
 511 000e F021     		movs	r1, #240
 512 0010 82F82310 		strb	r1, [r2, #35]
 513              	.LVL34:
1817:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 514              		.loc 2 1817 46 view .LVU136
 515              	.LBE87:
ARM GAS  /tmp/ccCKUkgF.s 			page 67


 516              	.LBE86:
2026:../../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 517              		.loc 2 2026 3 is_stmt 1 view .LVU137
 518              		.loc 2 2026 18 is_stmt 0 view .LVU138
 519 0014 0020     		movs	r0, #0
 520              	.LVL35:
 521              		.loc 2 2026 18 view .LVU139
 522 0016 9860     		str	r0, [r3, #8]
2027:../../Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 523              		.loc 2 2027 3 is_stmt 1 view .LVU140
 524              		.loc 2 2027 18 is_stmt 0 view .LVU141
 525 0018 0722     		movs	r2, #7
 526 001a 1A60     		str	r2, [r3]
2028:../../Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2029:../../Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2030:../../Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 527              		.loc 2 2030 3 is_stmt 1 view .LVU142
 528              		.loc 2 2030 10 is_stmt 0 view .LVU143
 529 001c 7047     		bx	lr
 530              	.L26:
2021:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 531              		.loc 2 2021 12 view .LVU144
 532 001e 0120     		movs	r0, #1
 533              	.LVL36:
2021:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 534              		.loc 2 2021 12 view .LVU145
 535              	.LBE85:
 536              	.LBE84:
 231:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 537              		.loc 1 231 1 view .LVU146
 538 0020 7047     		bx	lr
 539              	.L28:
 540 0022 00BF     		.align	2
 541              	.L27:
 542 0024 10E000E0 		.word	-536813552
 543 0028 00ED00E0 		.word	-536810240
 544              		.cfi_endproc
 545              	.LFE137:
 547              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_MPU_Disable
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	HAL_MPU_Disable:
 556              	.LFB138:
 232:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 233:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @}
 234:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 235:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 236:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 237:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief   Cortex control functions
 238:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 239:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 240:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 241:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
ARM GAS  /tmp/ccCKUkgF.s 			page 68


 242:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 243:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 244:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 245:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 246:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 247:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 248:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 249:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 250:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 251:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 252:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 253:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables the MPU
 254:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 255:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 256:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 257:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 557              		.loc 1 257 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 258:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 259:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DMB();
 562              		.loc 1 259 3 view .LVU148
 563              	.LBB88:
 564              	.LBI88:
 947:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 565              		.loc 3 955 27 view .LVU149
 566              	.LBB89:
 956:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 567              		.loc 3 957 3 view .LVU150
 568              		.syntax unified
 569              	@ 957 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 570 0000 BFF35F8F 		dmb 0xF
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574              	.LBE89:
 575              	.LBE88:
 260:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 261:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable fault exceptions */
 262:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 576              		.loc 1 262 3 view .LVU151
 577              		.loc 1 262 14 is_stmt 0 view .LVU152
 578 0004 044A     		ldr	r2, .L30
 579 0006 536A     		ldr	r3, [r2, #36]
 580 0008 23F48033 		bic	r3, r3, #65536
 581 000c 5362     		str	r3, [r2, #36]
ARM GAS  /tmp/ccCKUkgF.s 			page 69


 263:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 264:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 265:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = 0;
 582              		.loc 1 265 3 is_stmt 1 view .LVU153
 583              		.loc 1 265 13 is_stmt 0 view .LVU154
 584 000e 034B     		ldr	r3, .L30+4
 585 0010 0022     		movs	r2, #0
 586 0012 5A60     		str	r2, [r3, #4]
 266:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 587              		.loc 1 266 1 view .LVU155
 588 0014 7047     		bx	lr
 589              	.L31:
 590 0016 00BF     		.align	2
 591              	.L30:
 592 0018 00ED00E0 		.word	-536810240
 593 001c 90ED00E0 		.word	-536810096
 594              		.cfi_endproc
 595              	.LFE138:
 597              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_MPU_Enable
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	HAL_MPU_Enable:
 606              	.LVL37:
 607              	.LFB139:
 267:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 268:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 269:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables the MPU
 270:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault,
 271:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         NMI, FAULTMASK and privileged access to the default memory
 272:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 273:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 274:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 275:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 276:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 277:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 278:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 279:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 280:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 608              		.loc 1 280 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 281:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable the MPU */
 282:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 613              		.loc 1 282 3 view .LVU157
 614              		.loc 1 282 27 is_stmt 0 view .LVU158
 615 0000 40F00100 		orr	r0, r0, #1
 616              	.LVL38:
 617              		.loc 1 282 13 view .LVU159
 618 0004 054B     		ldr	r3, .L33
 619 0006 5860     		str	r0, [r3, #4]
 283:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /tmp/ccCKUkgF.s 			page 70


 284:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable fault exceptions */
 285:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 620              		.loc 1 285 3 is_stmt 1 view .LVU160
 621              		.loc 1 285 14 is_stmt 0 view .LVU161
 622 0008 054A     		ldr	r2, .L33+4
 623 000a 536A     		ldr	r3, [r2, #36]
 624 000c 43F48033 		orr	r3, r3, #65536
 625 0010 5362     		str	r3, [r2, #36]
 286:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 287:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 288:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DSB();
 626              		.loc 1 288 3 is_stmt 1 view .LVU162
 627              	.LBB90:
 628              	.LBI90:
 944:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 629              		.loc 3 944 27 view .LVU163
 630              	.LBB91:
 946:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 631              		.loc 3 946 3 view .LVU164
 632              		.syntax unified
 633              	@ 946 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 634 0012 BFF34F8F 		dsb 0xF
 635              	@ 0 "" 2
 636              		.thumb
 637              		.syntax unified
 638              	.LBE91:
 639              	.LBE90:
 289:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __ISB();
 640              		.loc 1 289 3 view .LVU165
 641              	.LBB92:
 642              	.LBI92:
 933:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 643              		.loc 3 933 27 view .LVU166
 644              	.LBB93:
 935:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 645              		.loc 3 935 3 view .LVU167
 646              		.syntax unified
 647              	@ 935 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 648 0016 BFF36F8F 		isb 0xF
 649              	@ 0 "" 2
 650              		.thumb
 651              		.syntax unified
 652              	.LBE93:
 653              	.LBE92:
 290:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 654              		.loc 1 290 1 is_stmt 0 view .LVU168
 655 001a 7047     		bx	lr
 656              	.L34:
 657              		.align	2
 658              	.L33:
 659 001c 90ED00E0 		.word	-536810096
 660 0020 00ED00E0 		.word	-536810240
 661              		.cfi_endproc
 662              	.LFE139:
 664              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_MPU_ConfigRegion
ARM GAS  /tmp/ccCKUkgF.s 			page 71


 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	HAL_MPU_ConfigRegion:
 673              	.LVL39:
 674              	.LFB140:
 291:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 292:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 293:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 294:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  the initialization and configuration information.
 295:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 296:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 297:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 298:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 675              		.loc 1 298 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 299:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 300:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 680              		.loc 1 300 3 view .LVU170
 301:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 681              		.loc 1 301 3 view .LVU171
 302:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 303:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the Region number */
 304:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 682              		.loc 1 304 3 view .LVU172
 683              		.loc 1 304 22 is_stmt 0 view .LVU173
 684 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 685              		.loc 1 304 12 view .LVU174
 686 0002 134B     		ldr	r3, .L38
 687 0004 9A60     		str	r2, [r3, #8]
 305:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 306:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != 0UL)
 688              		.loc 1 306 3 is_stmt 1 view .LVU175
 689              		.loc 1 306 16 is_stmt 0 view .LVU176
 690 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 691              		.loc 1 306 6 view .LVU177
 692 0008 EBB1     		cbz	r3, .L36
 307:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 308:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     /* Check the parameters */
 309:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 693              		.loc 1 309 5 is_stmt 1 view .LVU178
 310:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 694              		.loc 1 310 5 view .LVU179
 311:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 695              		.loc 1 311 5 view .LVU180
 312:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 696              		.loc 1 312 5 view .LVU181
 313:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 697              		.loc 1 313 5 view .LVU182
 314:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 698              		.loc 1 314 5 view .LVU183
 315:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 699              		.loc 1 315 5 view .LVU184
ARM GAS  /tmp/ccCKUkgF.s 			page 72


 316:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 700              		.loc 1 316 5 view .LVU185
 317:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 318:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 701              		.loc 1 318 5 view .LVU186
 702              		.loc 1 318 25 is_stmt 0 view .LVU187
 703 000a 4368     		ldr	r3, [r0, #4]
 704              		.loc 1 318 15 view .LVU188
 705 000c 104A     		ldr	r2, .L38
 706 000e D360     		str	r3, [r2, #12]
 319:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 707              		.loc 1 319 5 is_stmt 1 view .LVU189
 708              		.loc 1 319 36 is_stmt 0 view .LVU190
 709 0010 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 320:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 710              		.loc 1 320 36 view .LVU191
 711 0012 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 712              		.loc 1 320 62 view .LVU192
 713 0014 1B06     		lsls	r3, r3, #24
 319:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 714              		.loc 1 319 84 view .LVU193
 715 0016 43EA0173 		orr	r3, r3, r1, lsl #28
 321:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 716              		.loc 1 321 36 view .LVU194
 717 001a 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 320:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 718              		.loc 1 320 84 view .LVU195
 719 001c 43EAC143 		orr	r3, r3, r1, lsl #19
 322:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 720              		.loc 1 322 36 view .LVU196
 721 0020 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 321:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 722              		.loc 1 321 84 view .LVU197
 723 0022 43EA8143 		orr	r3, r3, r1, lsl #18
 323:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 724              		.loc 1 323 36 view .LVU198
 725 0026 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 322:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 726              		.loc 1 322 84 view .LVU199
 727 0028 43EA4143 		orr	r3, r3, r1, lsl #17
 324:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 728              		.loc 1 324 36 view .LVU200
 729 002c C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 323:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 730              		.loc 1 323 84 view .LVU201
 731 002e 43EA0143 		orr	r3, r3, r1, lsl #16
 325:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 732              		.loc 1 325 36 view .LVU202
 733 0032 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 324:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 734              		.loc 1 324 84 view .LVU203
 735 0034 43EA0123 		orr	r3, r3, r1, lsl #8
 326:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 736              		.loc 1 326 36 view .LVU204
 737 0038 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 325:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 738              		.loc 1 325 84 view .LVU205
ARM GAS  /tmp/ccCKUkgF.s 			page 73


 739 003a 43EA4103 		orr	r3, r3, r1, lsl #1
 327:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 740              		.loc 1 327 36 view .LVU206
 741 003e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 326:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 742              		.loc 1 326 84 view .LVU207
 743 0040 0B43     		orrs	r3, r3, r1
 319:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 744              		.loc 1 319 15 view .LVU208
 745 0042 1361     		str	r3, [r2, #16]
 746 0044 7047     		bx	lr
 747              	.L36:
 328:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 329:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 330:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 331:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 748              		.loc 1 331 5 is_stmt 1 view .LVU209
 749              		.loc 1 331 15 is_stmt 0 view .LVU210
 750 0046 024B     		ldr	r3, .L38
 751 0048 0022     		movs	r2, #0
 752 004a DA60     		str	r2, [r3, #12]
 332:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 753              		.loc 1 332 5 is_stmt 1 view .LVU211
 754              		.loc 1 332 15 is_stmt 0 view .LVU212
 755 004c 1A61     		str	r2, [r3, #16]
 333:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 334:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 756              		.loc 1 334 1 view .LVU213
 757 004e 7047     		bx	lr
 758              	.L39:
 759              		.align	2
 760              	.L38:
 761 0050 90ED00E0 		.word	-536810096
 762              		.cfi_endproc
 763              	.LFE140:
 765              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_NVIC_GetPriorityGrouping
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	HAL_NVIC_GetPriorityGrouping:
 774              	.LFB141:
 335:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 336:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 337:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 338:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 339:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 340:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 341:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 342:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 775              		.loc 1 342 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
ARM GAS  /tmp/ccCKUkgF.s 			page 74


 343:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 344:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 780              		.loc 1 344 3 view .LVU215
 781              	.LBB94:
 782              	.LBI94:
1667:../../Drivers/CMSIS/Include/core_cm4.h **** {
 783              		.loc 2 1667 26 view .LVU216
 784              	.LBB95:
1669:../../Drivers/CMSIS/Include/core_cm4.h **** }
 785              		.loc 2 1669 3 view .LVU217
1669:../../Drivers/CMSIS/Include/core_cm4.h **** }
 786              		.loc 2 1669 26 is_stmt 0 view .LVU218
 787 0000 024B     		ldr	r3, .L41
 788 0002 D868     		ldr	r0, [r3, #12]
 789              	.LBE95:
 790              	.LBE94:
 345:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 791              		.loc 1 345 1 view .LVU219
 792 0004 C0F30220 		ubfx	r0, r0, #8, #3
 793 0008 7047     		bx	lr
 794              	.L42:
 795 000a 00BF     		.align	2
 796              	.L41:
 797 000c 00ED00E0 		.word	-536810240
 798              		.cfi_endproc
 799              	.LFE141:
 801              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_NVIC_GetPriority
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	HAL_NVIC_GetPriority:
 810              	.LVL40:
 811              	.LFB142:
 346:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 347:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 348:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 349:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 350:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 351:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 352:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 353:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 354:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 355:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 356:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 357:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 358:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 359:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 360:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 361:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 362:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 363:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 364:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 365:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 366:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
ARM GAS  /tmp/ccCKUkgF.s 			page 75


 367:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 368:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 369:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 812              		.loc 1 369 1 is_stmt 1 view -0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 817              		.loc 1 369 1 is_stmt 0 view .LVU221
 818 0000 70B4     		push	{r4, r5, r6}
 819              	.LCFI3:
 820              		.cfi_def_cfa_offset 12
 821              		.cfi_offset 4, -12
 822              		.cfi_offset 5, -8
 823              		.cfi_offset 6, -4
 370:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 371:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 824              		.loc 1 371 3 is_stmt 1 view .LVU222
 372:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 373:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 825              		.loc 1 373 3 view .LVU223
 826              	.LVL41:
 827              	.LBB96:
 828              	.LBI96:
1831:../../Drivers/CMSIS/Include/core_cm4.h **** {
 829              		.loc 2 1831 26 view .LVU224
 830              	.LBB97:
1834:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 831              		.loc 2 1834 3 view .LVU225
1834:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 832              		.loc 2 1834 6 is_stmt 0 view .LVU226
 833 0002 0028     		cmp	r0, #0
 834              	.LVL42:
1834:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 835              		.loc 2 1834 6 view .LVU227
 836 0004 1DDB     		blt	.L44
1836:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 837              		.loc 2 1836 5 is_stmt 1 view .LVU228
1836:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 838              		.loc 2 1836 31 is_stmt 0 view .LVU229
 839 0006 134C     		ldr	r4, .L49
 840 0008 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
1836:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 841              		.loc 2 1836 64 view .LVU230
 842 000a 0009     		lsrs	r0, r0, #4
 843              	.L45:
 844              	.LVL43:
1836:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 845              		.loc 2 1836 64 view .LVU231
 846              	.LBE97:
 847              	.LBE96:
 848              	.LBB99:
 849              	.LBI99:
1883:../../Drivers/CMSIS/Include/core_cm4.h **** {
 850              		.loc 2 1883 22 is_stmt 1 view .LVU232
 851              	.LBB100:
1885:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
ARM GAS  /tmp/ccCKUkgF.s 			page 76


 852              		.loc 2 1885 3 view .LVU233
1885:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 853              		.loc 2 1885 12 is_stmt 0 view .LVU234
 854 000c 01F00701 		and	r1, r1, #7
 855              	.LVL44:
1886:../../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 856              		.loc 2 1886 3 is_stmt 1 view .LVU235
1887:../../Drivers/CMSIS/Include/core_cm4.h **** 
 857              		.loc 2 1887 3 view .LVU236
1889:../../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 858              		.loc 2 1889 3 view .LVU237
1889:../../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 859              		.loc 2 1889 31 is_stmt 0 view .LVU238
 860 0010 C1F10704 		rsb	r4, r1, #7
1889:../../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 861              		.loc 2 1889 23 view .LVU239
 862 0014 042C     		cmp	r4, #4
 863 0016 28BF     		it	cs
 864 0018 0424     		movcs	r4, #4
 865              	.LVL45:
1890:../../Drivers/CMSIS/Include/core_cm4.h **** 
 866              		.loc 2 1890 3 is_stmt 1 view .LVU240
1890:../../Drivers/CMSIS/Include/core_cm4.h **** 
 867              		.loc 2 1890 44 is_stmt 0 view .LVU241
 868 001a 0D1D     		adds	r5, r1, #4
1890:../../Drivers/CMSIS/Include/core_cm4.h **** 
 869              		.loc 2 1890 109 view .LVU242
 870 001c 062D     		cmp	r5, #6
 871 001e 16D9     		bls	.L47
 872 0020 0339     		subs	r1, r1, #3
 873              	.LVL46:
 874              	.L46:
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 875              		.loc 2 1892 3 is_stmt 1 view .LVU243
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 876              		.loc 2 1892 33 is_stmt 0 view .LVU244
 877 0022 20FA01F6 		lsr	r6, r0, r1
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 878              		.loc 2 1892 53 view .LVU245
 879 0026 4FF0FF35 		mov	r5, #-1
 880              	.LVL47:
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 881              		.loc 2 1892 53 view .LVU246
 882 002a 05FA04F4 		lsl	r4, r5, r4
 883              	.LVL48:
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 884              		.loc 2 1892 53 view .LVU247
 885 002e 26EA0404 		bic	r4, r6, r4
1892:../../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 886              		.loc 2 1892 21 view .LVU248
 887 0032 1460     		str	r4, [r2]
1893:../../Drivers/CMSIS/Include/core_cm4.h **** }
 888              		.loc 2 1893 3 is_stmt 1 view .LVU249
1893:../../Drivers/CMSIS/Include/core_cm4.h **** }
 889              		.loc 2 1893 53 is_stmt 0 view .LVU250
 890 0034 05FA01F1 		lsl	r1, r5, r1
 891              	.LVL49:
ARM GAS  /tmp/ccCKUkgF.s 			page 77


1893:../../Drivers/CMSIS/Include/core_cm4.h **** }
 892              		.loc 2 1893 53 view .LVU251
 893 0038 20EA0100 		bic	r0, r0, r1
 894              	.LVL50:
1893:../../Drivers/CMSIS/Include/core_cm4.h **** }
 895              		.loc 2 1893 21 view .LVU252
 896 003c 1860     		str	r0, [r3]
 897              	.LVL51:
1893:../../Drivers/CMSIS/Include/core_cm4.h **** }
 898              		.loc 2 1893 21 view .LVU253
 899              	.LBE100:
 900              	.LBE99:
 374:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 901              		.loc 1 374 1 view .LVU254
 902 003e 70BC     		pop	{r4, r5, r6}
 903              	.LCFI4:
 904              		.cfi_remember_state
 905              		.cfi_restore 6
 906              		.cfi_restore 5
 907              		.cfi_restore 4
 908              		.cfi_def_cfa_offset 0
 909 0040 7047     		bx	lr
 910              	.LVL52:
 911              	.L44:
 912              	.LCFI5:
 913              		.cfi_restore_state
 914              	.LBB102:
 915              	.LBB98:
1840:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 916              		.loc 2 1840 5 is_stmt 1 view .LVU255
1840:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 917              		.loc 2 1840 50 is_stmt 0 view .LVU256
 918 0042 00F00F00 		and	r0, r0, #15
1840:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 919              		.loc 2 1840 31 view .LVU257
 920 0046 044C     		ldr	r4, .L49+4
 921 0048 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
1840:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 922              		.loc 2 1840 64 view .LVU258
 923 004a 0009     		lsrs	r0, r0, #4
 924 004c DEE7     		b	.L45
 925              	.LVL53:
 926              	.L47:
1840:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 927              		.loc 2 1840 64 view .LVU259
 928              	.LBE98:
 929              	.LBE102:
 930              	.LBB103:
 931              	.LBB101:
1890:../../Drivers/CMSIS/Include/core_cm4.h **** 
 932              		.loc 2 1890 109 view .LVU260
 933 004e 0021     		movs	r1, #0
 934              	.LVL54:
1890:../../Drivers/CMSIS/Include/core_cm4.h **** 
 935              		.loc 2 1890 109 view .LVU261
 936 0050 E7E7     		b	.L46
 937              	.L50:
ARM GAS  /tmp/ccCKUkgF.s 			page 78


 938 0052 00BF     		.align	2
 939              	.L49:
 940 0054 00E400E0 		.word	-536812544
 941 0058 14ED00E0 		.word	-536810220
 942              	.LBE101:
 943              	.LBE103:
 944              		.cfi_endproc
 945              	.LFE142:
 947              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 948              		.align	1
 949              		.global	HAL_NVIC_SetPendingIRQ
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	HAL_NVIC_SetPendingIRQ:
 956              	.LVL55:
 957              	.LFB143:
 375:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 376:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 377:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 378:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 379:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 380:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 381:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 382:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 383:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 384:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 958              		.loc 1 384 1 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 385:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 386:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 963              		.loc 1 386 3 view .LVU263
 387:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 388:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set interrupt pending */
 389:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 964              		.loc 1 389 3 view .LVU264
 965              	.LBB104:
 966              	.LBI104:
1755:../../Drivers/CMSIS/Include/core_cm4.h **** {
 967              		.loc 2 1755 22 view .LVU265
 968              	.LBB105:
1757:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 969              		.loc 2 1757 3 view .LVU266
1757:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 970              		.loc 2 1757 6 is_stmt 0 view .LVU267
 971 0000 0028     		cmp	r0, #0
 972              	.LVL56:
1757:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 973              		.loc 2 1757 6 view .LVU268
 974 0002 08DB     		blt	.L51
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 975              		.loc 2 1759 5 is_stmt 1 view .LVU269
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccCKUkgF.s 			page 79


 976              		.loc 2 1759 81 is_stmt 0 view .LVU270
 977 0004 00F01F02 		and	r2, r0, #31
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 978              		.loc 2 1759 34 view .LVU271
 979 0008 4009     		lsrs	r0, r0, #5
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 980              		.loc 2 1759 45 view .LVU272
 981 000a 0123     		movs	r3, #1
 982 000c 9340     		lsls	r3, r3, r2
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 983              		.loc 2 1759 43 view .LVU273
 984 000e 4030     		adds	r0, r0, #64
 985 0010 014A     		ldr	r2, .L53
 986 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 987              	.LVL57:
 988              	.L51:
1759:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 989              		.loc 2 1759 43 view .LVU274
 990              	.LBE105:
 991              	.LBE104:
 390:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 992              		.loc 1 390 1 view .LVU275
 993 0016 7047     		bx	lr
 994              	.L54:
 995              		.align	2
 996              	.L53:
 997 0018 00E100E0 		.word	-536813312
 998              		.cfi_endproc
 999              	.LFE143:
 1001              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1002              		.align	1
 1003              		.global	HAL_NVIC_GetPendingIRQ
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv4-sp-d16
 1009              	HAL_NVIC_GetPendingIRQ:
 1010              	.LVL58:
 1011              	.LFB144:
 391:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 392:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 393:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 394:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 395:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 396:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 397:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 398:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 399:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 400:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 401:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 402:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1012              		.loc 1 402 1 is_stmt 1 view -0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 403:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccCKUkgF.s 			page 80


 404:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1017              		.loc 1 404 3 view .LVU277
 405:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 406:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 407:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1018              		.loc 1 407 3 view .LVU278
 1019              	.LBB106:
 1020              	.LBI106:
1736:../../Drivers/CMSIS/Include/core_cm4.h **** {
 1021              		.loc 2 1736 26 view .LVU279
 1022              	.LBB107:
1738:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1023              		.loc 2 1738 3 view .LVU280
1738:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1024              		.loc 2 1738 6 is_stmt 0 view .LVU281
 1025 0000 0028     		cmp	r0, #0
 1026              	.LVL59:
1738:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1027              		.loc 2 1738 6 view .LVU282
 1028 0002 0BDB     		blt	.L57
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1029              		.loc 2 1740 5 is_stmt 1 view .LVU283
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1030              		.loc 2 1740 54 is_stmt 0 view .LVU284
 1031 0004 4309     		lsrs	r3, r0, #5
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1032              		.loc 2 1740 35 view .LVU285
 1033 0006 4033     		adds	r3, r3, #64
 1034 0008 054A     		ldr	r2, .L58
 1035 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1036              		.loc 2 1740 91 view .LVU286
 1037 000e 00F01F00 		and	r0, r0, #31
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1038              		.loc 2 1740 103 view .LVU287
 1039 0012 23FA00F0 		lsr	r0, r3, r0
1740:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1040              		.loc 2 1740 12 view .LVU288
 1041 0016 00F00100 		and	r0, r0, #1
 1042 001a 7047     		bx	lr
 1043              	.L57:
1744:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1044              		.loc 2 1744 11 view .LVU289
 1045 001c 0020     		movs	r0, #0
 1046              	.LVL60:
1744:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1047              		.loc 2 1744 11 view .LVU290
 1048              	.LBE107:
 1049              	.LBE106:
 408:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1050              		.loc 1 408 1 view .LVU291
 1051 001e 7047     		bx	lr
 1052              	.L59:
 1053              		.align	2
 1054              	.L58:
 1055 0020 00E100E0 		.word	-536813312
 1056              		.cfi_endproc
ARM GAS  /tmp/ccCKUkgF.s 			page 81


 1057              	.LFE144:
 1059              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1060              		.align	1
 1061              		.global	HAL_NVIC_ClearPendingIRQ
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu fpv4-sp-d16
 1067              	HAL_NVIC_ClearPendingIRQ:
 1068              	.LVL61:
 1069              	.LFB145:
 409:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 410:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 411:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 412:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 413:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 414:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 415:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 416:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 417:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 418:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1070              		.loc 1 418 1 is_stmt 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 419:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 420:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1075              		.loc 1 420 3 view .LVU293
 421:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 422:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Clear pending interrupt */
 423:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1076              		.loc 1 423 3 view .LVU294
 1077              	.LBB108:
 1078              	.LBI108:
1770:../../Drivers/CMSIS/Include/core_cm4.h **** {
 1079              		.loc 2 1770 22 view .LVU295
 1080              	.LBB109:
1772:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1081              		.loc 2 1772 3 view .LVU296
1772:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1082              		.loc 2 1772 6 is_stmt 0 view .LVU297
 1083 0000 0028     		cmp	r0, #0
 1084              	.LVL62:
1772:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1085              		.loc 2 1772 6 view .LVU298
 1086 0002 08DB     		blt	.L60
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1087              		.loc 2 1774 5 is_stmt 1 view .LVU299
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1088              		.loc 2 1774 81 is_stmt 0 view .LVU300
 1089 0004 00F01F02 		and	r2, r0, #31
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1090              		.loc 2 1774 34 view .LVU301
 1091 0008 4009     		lsrs	r0, r0, #5
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1092              		.loc 2 1774 45 view .LVU302
ARM GAS  /tmp/ccCKUkgF.s 			page 82


 1093 000a 0123     		movs	r3, #1
 1094 000c 9340     		lsls	r3, r3, r2
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1095              		.loc 2 1774 43 view .LVU303
 1096 000e 6030     		adds	r0, r0, #96
 1097 0010 014A     		ldr	r2, .L62
 1098 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1099              	.LVL63:
 1100              	.L60:
1774:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1101              		.loc 2 1774 43 view .LVU304
 1102              	.LBE109:
 1103              	.LBE108:
 424:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1104              		.loc 1 424 1 view .LVU305
 1105 0016 7047     		bx	lr
 1106              	.L63:
 1107              		.align	2
 1108              	.L62:
 1109 0018 00E100E0 		.word	-536813312
 1110              		.cfi_endproc
 1111              	.LFE145:
 1113              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1114              		.align	1
 1115              		.global	HAL_NVIC_GetActive
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	HAL_NVIC_GetActive:
 1122              	.LVL64:
 1123              	.LFB146:
 425:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 426:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 427:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 428:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 429:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 430:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 431:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 432:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 433:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 434:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 435:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1124              		.loc 1 435 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		@ link register save eliminated.
 436:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 437:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1129              		.loc 1 437 3 view .LVU307
 438:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 439:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 440:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1130              		.loc 1 440 3 view .LVU308
 1131              	.LBB110:
 1132              	.LBI110:
ARM GAS  /tmp/ccCKUkgF.s 			page 83


1787:../../Drivers/CMSIS/Include/core_cm4.h **** {
 1133              		.loc 2 1787 26 view .LVU309
 1134              	.LBB111:
1789:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1135              		.loc 2 1789 3 view .LVU310
1789:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1136              		.loc 2 1789 6 is_stmt 0 view .LVU311
 1137 0000 0028     		cmp	r0, #0
 1138              	.LVL65:
1789:../../Drivers/CMSIS/Include/core_cm4.h ****   {
 1139              		.loc 2 1789 6 view .LVU312
 1140 0002 0BDB     		blt	.L66
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1141              		.loc 2 1791 5 is_stmt 1 view .LVU313
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1142              		.loc 2 1791 54 is_stmt 0 view .LVU314
 1143 0004 4309     		lsrs	r3, r0, #5
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1144              		.loc 2 1791 35 view .LVU315
 1145 0006 8033     		adds	r3, r3, #128
 1146 0008 054A     		ldr	r2, .L67
 1147 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1148              		.loc 2 1791 91 view .LVU316
 1149 000e 00F01F00 		and	r0, r0, #31
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1150              		.loc 2 1791 103 view .LVU317
 1151 0012 23FA00F0 		lsr	r0, r3, r0
1791:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1152              		.loc 2 1791 12 view .LVU318
 1153 0016 00F00100 		and	r0, r0, #1
 1154 001a 7047     		bx	lr
 1155              	.L66:
1795:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1156              		.loc 2 1795 11 view .LVU319
 1157 001c 0020     		movs	r0, #0
 1158              	.LVL66:
1795:../../Drivers/CMSIS/Include/core_cm4.h ****   }
 1159              		.loc 2 1795 11 view .LVU320
 1160              	.LBE111:
 1161              	.LBE110:
 441:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1162              		.loc 1 441 1 view .LVU321
 1163 001e 7047     		bx	lr
 1164              	.L68:
 1165              		.align	2
 1166              	.L67:
 1167 0020 00E100E0 		.word	-536813312
 1168              		.cfi_endproc
 1169              	.LFE146:
 1171              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1172              		.align	1
 1173              		.global	HAL_SYSTICK_CLKSourceConfig
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccCKUkgF.s 			page 84


 1179              	HAL_SYSTICK_CLKSourceConfig:
 1180              	.LVL67:
 1181              	.LFB147:
 442:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 443:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 444:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 445:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 446:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 447:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 448:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 449:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 450:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 451:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 452:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1182              		.loc 1 452 1 is_stmt 1 view -0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 453:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 454:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1187              		.loc 1 454 3 view .LVU323
 455:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1188              		.loc 1 455 3 view .LVU324
 1189              		.loc 1 455 6 is_stmt 0 view .LVU325
 1190 0000 0428     		cmp	r0, #4
 1191 0002 05D0     		beq	.L72
 456:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 457:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 458:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 459:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 460:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 461:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1192              		.loc 1 461 5 is_stmt 1 view .LVU326
 1193              		.loc 1 461 19 is_stmt 0 view .LVU327
 1194 0004 054A     		ldr	r2, .L73
 1195 0006 1368     		ldr	r3, [r2]
 1196 0008 23F00403 		bic	r3, r3, #4
 1197 000c 1360     		str	r3, [r2]
 462:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 463:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1198              		.loc 1 463 1 view .LVU328
 1199 000e 7047     		bx	lr
 1200              	.L72:
 457:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1201              		.loc 1 457 5 is_stmt 1 view .LVU329
 457:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1202              		.loc 1 457 19 is_stmt 0 view .LVU330
 1203 0010 024A     		ldr	r2, .L73
 1204 0012 1368     		ldr	r3, [r2]
 1205 0014 43F00403 		orr	r3, r3, #4
 1206 0018 1360     		str	r3, [r2]
 1207 001a 7047     		bx	lr
 1208              	.L74:
 1209              		.align	2
 1210              	.L73:
 1211 001c 10E000E0 		.word	-536813552
ARM GAS  /tmp/ccCKUkgF.s 			page 85


 1212              		.cfi_endproc
 1213              	.LFE147:
 1215              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1216              		.align	1
 1217              		.weak	HAL_SYSTICK_Callback
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu fpv4-sp-d16
 1223              	HAL_SYSTICK_Callback:
 1224              	.LFB149:
 464:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 465:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 466:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 467:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 468:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 469:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 470:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 471:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 472:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 473:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 474:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 475:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 476:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 477:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 478:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 479:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1225              		.loc 1 479 1 is_stmt 1 view -0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 480:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 481:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 482:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    */
 483:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1230              		.loc 1 483 1 view .LVU332
 1231 0000 7047     		bx	lr
 1232              		.cfi_endproc
 1233              	.LFE149:
 1235              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1236              		.align	1
 1237              		.global	HAL_SYSTICK_IRQHandler
 1238              		.syntax unified
 1239              		.thumb
 1240              		.thumb_func
 1241              		.fpu fpv4-sp-d16
 1243              	HAL_SYSTICK_IRQHandler:
 1244              	.LFB148:
 470:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1245              		.loc 1 470 1 view -0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249 0000 08B5     		push	{r3, lr}
 1250              	.LCFI6:
 1251              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccCKUkgF.s 			page 86


 1252              		.cfi_offset 3, -8
 1253              		.cfi_offset 14, -4
 471:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1254              		.loc 1 471 3 view .LVU334
 1255 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1256              	.LVL68:
 472:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 1257              		.loc 1 472 1 is_stmt 0 view .LVU335
 1258 0006 08BD     		pop	{r3, pc}
 1259              		.cfi_endproc
 1260              	.LFE148:
 1262              		.section	.text.HAL_GetCurrentCPUID,"ax",%progbits
 1263              		.align	1
 1264              		.global	HAL_GetCurrentCPUID
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1268              		.fpu fpv4-sp-d16
 1270              	HAL_GetCurrentCPUID:
 1271              	.LFB150:
 484:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 485:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if defined(DUAL_CORE)
 486:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 487:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 488:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Returns the current CPU ID.
 489:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval CPU identifier
 490:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 491:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 492:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1272              		.loc 1 492 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
 493:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 1277              		.loc 1 493 3 view .LVU337
 1278              		.loc 1 493 12 is_stmt 0 view .LVU338
 1279 0000 044B     		ldr	r3, .L82
 1280 0002 1B68     		ldr	r3, [r3]
 1281              		.loc 1 493 35 view .LVU339
 1282 0004 C3F30313 		ubfx	r3, r3, #4, #4
 1283              		.loc 1 493 6 view .LVU340
 1284 0008 072B     		cmp	r3, #7
 1285 000a 01D0     		beq	.L81
 494:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 495:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return  CM7_CPUID;
 496:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 497:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 498:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 499:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return CM4_CPUID;
 1286              		.loc 1 499 12 view .LVU341
 1287 000c 0120     		movs	r0, #1
 500:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 501:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1288              		.loc 1 501 1 view .LVU342
 1289 000e 7047     		bx	lr
 1290              	.L81:
ARM GAS  /tmp/ccCKUkgF.s 			page 87


 495:../../Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1291              		.loc 1 495 13 view .LVU343
 1292 0010 0320     		movs	r0, #3
 1293 0012 7047     		bx	lr
 1294              	.L83:
 1295              		.align	2
 1296              	.L82:
 1297 0014 00ED00E0 		.word	-536810240
 1298              		.cfi_endproc
 1299              	.LFE150:
 1301              		.text
 1302              	.Letext0:
 1303              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 1304              		.file 5 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/incl
 1305              		.file 6 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/incl
 1306              		.file 7 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1307              		.file 8 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-e
 1308              		.file 9 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/incl
 1309              		.file 10 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1310              		.file 11 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1311              		.file 12 "/home/im/Programs/gcc-arm-none-eabi/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1312              		.file 13 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1313              		.file 14 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1314              		.file 15 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1315              		.file 16 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccCKUkgF.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_cortex.c
     /tmp/ccCKUkgF.s:18     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccCKUkgF.s:26     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccCKUkgF.s:82     .text.HAL_NVIC_SetPriorityGrouping:000000000000001c $d
     /tmp/ccCKUkgF.s:88     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccCKUkgF.s:95     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccCKUkgF.s:244    .text.HAL_NVIC_SetPriority:0000000000000058 $d
     /tmp/ccCKUkgF.s:251    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccCKUkgF.s:258    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccCKUkgF.s:301    .text.HAL_NVIC_EnableIRQ:0000000000000018 $d
     /tmp/ccCKUkgF.s:306    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccCKUkgF.s:313    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccCKUkgF.s:384    .text.HAL_NVIC_DisableIRQ:0000000000000020 $d
     /tmp/ccCKUkgF.s:389    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccCKUkgF.s:396    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccCKUkgF.s:462    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/ccCKUkgF.s:470    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccCKUkgF.s:477    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccCKUkgF.s:542    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccCKUkgF.s:548    .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccCKUkgF.s:555    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccCKUkgF.s:592    .text.HAL_MPU_Disable:0000000000000018 $d
     /tmp/ccCKUkgF.s:598    .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccCKUkgF.s:605    .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccCKUkgF.s:659    .text.HAL_MPU_Enable:000000000000001c $d
     /tmp/ccCKUkgF.s:665    .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccCKUkgF.s:672    .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccCKUkgF.s:761    .text.HAL_MPU_ConfigRegion:0000000000000050 $d
     /tmp/ccCKUkgF.s:766    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccCKUkgF.s:773    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccCKUkgF.s:797    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccCKUkgF.s:802    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccCKUkgF.s:809    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccCKUkgF.s:940    .text.HAL_NVIC_GetPriority:0000000000000054 $d
     /tmp/ccCKUkgF.s:948    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccCKUkgF.s:955    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccCKUkgF.s:997    .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/ccCKUkgF.s:1002   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccCKUkgF.s:1009   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccCKUkgF.s:1055   .text.HAL_NVIC_GetPendingIRQ:0000000000000020 $d
     /tmp/ccCKUkgF.s:1060   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccCKUkgF.s:1067   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccCKUkgF.s:1109   .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/ccCKUkgF.s:1114   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccCKUkgF.s:1121   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccCKUkgF.s:1167   .text.HAL_NVIC_GetActive:0000000000000020 $d
     /tmp/ccCKUkgF.s:1172   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccCKUkgF.s:1179   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccCKUkgF.s:1211   .text.HAL_SYSTICK_CLKSourceConfig:000000000000001c $d
     /tmp/ccCKUkgF.s:1216   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccCKUkgF.s:1223   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccCKUkgF.s:1236   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccCKUkgF.s:1243   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccCKUkgF.s:1263   .text.HAL_GetCurrentCPUID:0000000000000000 $t
     /tmp/ccCKUkgF.s:1270   .text.HAL_GetCurrentCPUID:0000000000000000 HAL_GetCurrentCPUID
     /tmp/ccCKUkgF.s:1297   .text.HAL_GetCurrentCPUID:0000000000000014 $d
ARM GAS  /tmp/ccCKUkgF.s 			page 89



NO UNDEFINED SYMBOLS
